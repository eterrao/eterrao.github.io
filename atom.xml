<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>书途</title>
  <subtitle>人无书而涂，因书而智，终老以书为伴，是为书途</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.shutu.tech/"/>
  <updated>2016-07-24T15:56:48.000Z</updated>
  <id>http://www.shutu.tech/</id>
  
  <author>
    <name>Codios</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android设计模式总结</title>
    <link href="http://www.shutu.tech/2016/07/24/Android%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93/"/>
    <id>http://www.shutu.tech/2016/07/24/Android设计模式总结/</id>
    <published>2016-07-24T05:48:00.000Z</published>
    <updated>2016-07-24T15:56:48.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;看《Android源码设计模式》之前设计模式没怎么接触，代码写的强耦合，复用性可读性都差到极致，于是有了设计模式的学习之路。&lt;/p&gt;
&lt;p&gt;设计模式相关的还推荐《敏捷软件开发 — 原则、模式与实践》作者Robert C.Martin和《设计模式 — 可复用面向对象软件的基础》四人帮写的这两本书。前者对设计原则有详细描述，后者主要涉及经典的设计模式讲解。&lt;/p&gt;
&lt;p&gt;本文主要引用内容主要出自《敏捷软件开发 — 原则、模式与实践》和《Android源码设计模式》。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;面向对象的六大原则&quot;&gt;&lt;a href=&quot;#面向对象的六大原则&quot; class=&quot;headerlink&quot; title=&quot;面向对象的六大原则&quot;&gt;&lt;/a&gt;面向对象的六大原则&lt;/h2&gt;&lt;h3 id=&quot;单一职责原则-Single-Responsibility-Principle-SRP&quot;&gt;&lt;a href=&quot;#单一职责原则-Single-Responsibility-Principle-SRP&quot; class=&quot;headerlink&quot; title=&quot;单一职责原则 (Single Responsibility Principle, SRP)&quot;&gt;&lt;/a&gt;单一职责原则 (Single Responsibility Principle, SRP)&lt;/h3&gt;&lt;h4 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;就一个类而言，应该仅有一个引起它变化的原因&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;开放封闭原则-The-Open-Closed-Principle-OCP&quot;&gt;&lt;a href=&quot;#开放封闭原则-The-Open-Closed-Principle-OCP&quot; class=&quot;headerlink&quot; title=&quot;开放封闭原则 (The Open - Closed Principle, OCP)&quot;&gt;&lt;/a&gt;开放封闭原则 (The Open - Closed Principle, OCP)&lt;/h3&gt;&lt;h4 id=&quot;定义-1&quot;&gt;&lt;a href=&quot;#定义-1&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;软件实体（类、模块、函数等等）应该是可以扩展的，但是不可修改的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h4&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;”对于扩展是开放的“（Open for extension）&lt;/p&gt;
&lt;p&gt;模块的行为是可扩展的，需求改变时我们可以对模块进行扩展，使其满足新行为，也就是说改变模块的功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;”对于更改是封闭的“ (Closed for modification)&lt;/p&gt;
&lt;p&gt;对模块进行扩展时，不必改动模块的源码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;抽象&quot;&gt;&lt;a href=&quot;#抽象&quot; class=&quot;headerlink&quot; title=&quot;抽象&quot;&gt;&lt;/a&gt;抽象&lt;/h4&gt;&lt;p&gt;模块可依赖于一个固定却能够描述一组任意个可能性为的抽象体（抽象基类）。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;里氏替换原则-Liskov-Substitution-Principle-LSP&quot;&gt;&lt;a href=&quot;#里氏替换原则-Liskov-Substitution-Principle-LSP&quot; class=&quot;headerlink&quot; title=&quot;里氏替换原则 (Liskov Substitution Principle, LSP)&quot;&gt;&lt;/a&gt;里氏替换原则 (Liskov Substitution Principle, LSP)&lt;/h3&gt;&lt;h4 id=&quot;定义-2&quot;&gt;&lt;a href=&quot;#定义-2&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h4&gt;&lt;p&gt;父类所实现的子类都能代替实现&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;老鼠的儿子会打洞&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;依赖倒置原则-Dependence-Inversion-Pinciple-DIP&quot;&gt;&lt;a href=&quot;#依赖倒置原则-Dependence-Inversion-Pinciple-DIP&quot; class=&quot;headerlink&quot; title=&quot;依赖倒置原则 (Dependence Inversion Pinciple, DIP)&quot;&gt;&lt;/a&gt;依赖倒置原则 (Dependence Inversion Pinciple, DIP)&lt;/h3&gt;&lt;h4 id=&quot;定义-3&quot;&gt;&lt;a href=&quot;#定义-3&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h4&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;高层模块不应该依赖于底层模块，二者都应该依赖于抽象；&lt;/li&gt;
&lt;li&gt;抽象不应该依赖于细节；&lt;/li&gt;
&lt;li&gt;细节应该依赖于抽象。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;接口隔离原则-Interface-Segregation-Principle&quot;&gt;&lt;a href=&quot;#接口隔离原则-Interface-Segregation-Principle&quot; class=&quot;headerlink&quot; title=&quot;接口隔离原则 (Interface Segregation Principle)&quot;&gt;&lt;/a&gt;接口隔离原则 (Interface Segregation Principle)&lt;/h3&gt;&lt;h4 id=&quot;定义-4&quot;&gt;&lt;a href=&quot;#定义-4&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h4&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;客户端不应该依赖于它不需要的接口；&lt;/li&gt;
&lt;li&gt;类间的依赖关系应该建立在最小接口之上。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;系统解开耦合，从而容易重构、更改和重新部署。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;迪米特原则-Law-of-Demeter-LOD&quot;&gt;&lt;a href=&quot;#迪米特原则-Law-of-Demeter-LOD&quot; class=&quot;headerlink&quot; title=&quot;迪米特原则 (Law of Demeter, LOD)&quot;&gt;&lt;/a&gt;迪米特原则 (Law of Demeter, LOD)&lt;/h3&gt;&lt;p&gt;又称&lt;strong&gt;最少认知原则&lt;/strong&gt; (Least Knowledge Principle, LKP)&lt;/p&gt;
&lt;h4 id=&quot;定义-5&quot;&gt;&lt;a href=&quot;#定义-5&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt; 一个对象应该对其他对象有最少的了解。&lt;/p&gt;
&lt;p&gt; 通俗地讲，一个类应该对自己需要耦合或调用的类知道的最少，类的内部调用或者依赖者没关系，调用者或者依赖者只需要知道它需要的方法即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;设计模式&quot;&gt;&lt;a href=&quot;#设计模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式&quot;&gt;&lt;/a&gt;设计模式&lt;/h2&gt;&lt;h3 id=&quot;单例模式&quot;&gt;&lt;a href=&quot;#单例模式&quot; class=&quot;headerlink&quot; title=&quot;单例模式&quot;&gt;&lt;/a&gt;单例模式&lt;/h3&gt;&lt;p&gt;单例模式的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;构造函数需要私有化，不允许在外部对其进行实例化，整个域中只允许有一个实例存在。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;单例模式又有三种常用的建立方法，如下所示。&lt;/p&gt;
&lt;h4 id=&quot;饿汉式&quot;&gt;&lt;a href=&quot;#饿汉式&quot; class=&quot;headerlink&quot; title=&quot;饿汉式&quot;&gt;&lt;/a&gt;饿汉式&lt;/h4&gt;&lt;p&gt;程序猿乐趣多多啊，取名都这么逗比。从名字上面看就容易理解既然饿了就吃东西，那么意味着一开始就将实例初始化了，饿汉嘛，要先吃东西。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 单例模式之饿汉模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;publc &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SingleTonOfEager&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;comment&quot;&gt;// 刚开始就进行初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; SingleTonOfEager sInstance = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SingleTonOfEager();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SingleTonOfEager&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// do nothing...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;comment&quot;&gt;// 仅能靠getInstance()获取实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; SingleTonOfEager &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sInstance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;占用资源&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;懒汉式&quot;&gt;&lt;a href=&quot;#懒汉式&quot; class=&quot;headerlink&quot; title=&quot;懒汉式&quot;&gt;&lt;/a&gt;懒汉式&lt;/h4&gt;&lt;p&gt;懒人都是伸手党，要用的时候才伸手取东西，所以使用的时候开始实例化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：需要使用同步锁，保证多线程情况下调用的安全性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：有了同步锁，虽然第一次已经实例化了，但是之后的调用依然有同步锁保证线程安全的，那么会导致资源不必要的消耗和同步开销，&lt;strong&gt;不建议使用该模式&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 单例模式之懒汉模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;publc &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SingletonOfLazy&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; SingletonOfLazy sInstance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SingletonOfLazy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// do nothing...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;comment&quot;&gt;// 仅能靠getInstance()获取实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; SingletonOfLazy &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// 需要用到的时候再初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sInstance == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			sInstance = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SingletonOfLazy();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sInstance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Double-Lock-Check-DLC&quot;&gt;&lt;a href=&quot;#Double-Lock-Check-DLC&quot; class=&quot;headerlink&quot; title=&quot;Double Lock Check, DLC&quot;&gt;&lt;/a&gt;Double Lock Check, DLC&lt;/h4&gt;&lt;h5 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;需要时才进行初始化；&lt;/li&gt;
&lt;li&gt;保证线程安全；&lt;/li&gt;
&lt;li&gt;已经初始化后的实例被调用时不需要再次进行同步锁，保证资源的高利用率。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 单例模式之Double Check Lock模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SingletonOfDCL&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; SingletonOfDCL sInstance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SingletonOfDCL&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// do nothing...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; SingletonOfDCL &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sInstance == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (SingletonOfDCL.class) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sInstance == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					sInstance = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SingletonOfDCL();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sInstance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;缺点-1&quot;&gt;&lt;a href=&quot;#缺点-1&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;可能会发生DCL失效  &lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;DCL模式是使用最多的模式。这种方式一般能满足需求&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;静态内部类单例模式&quot;&gt;&lt;a href=&quot;#静态内部类单例模式&quot; class=&quot;headerlink&quot; title=&quot;静态内部类单例模式&quot;&gt;&lt;/a&gt;静态内部类单例模式&lt;/h4&gt;&lt;p&gt;DCL有可能会失效，所以不建议使用该模式，看到这里又惊呆了，DCL都不建议使用，所以衍生出了下面这种模式：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SingletonOfInnerClass&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SingletonOfInnerClass&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; SingletonOfInnerClass &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; SingletonHolder.sInstance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SingletonHolder&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; SingletonOfInnerClass sInstance = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SingletonOfInnerClass();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;优点-1&quot;&gt;&lt;a href=&quot;#优点-1&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;只在需要使用时进行初始化；&lt;/li&gt;
&lt;li&gt;初始化完成后不再进行二次初始化；&lt;/li&gt;
&lt;li&gt;保证现成安全。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h5&gt;&lt;p&gt;这个模式是通过《Android源码设计模式》了解的，但是书中仅仅只是介绍优点，并没有过多的解释为什么。所以分析一下，静态内部类找中的sInstance对象，既然是final的，如我在Thinking In Java总结中：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于对象引用：final使引用总是指向初始化时的对象，无法改变其指向另一个对象，但被引用的对象自身是可以改变的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么第一次初始化后就算再进行初始化，由于sInstance是final的总指向初始化时的对象，所以不会被覆盖。&lt;/p&gt;
&lt;p&gt;### &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;看《Android源码设计模式》之前设计模式没怎么接触，代码写的强耦合，复用性可读性都差到极致，于是有了设计模式的学习之路。&lt;/p&gt;
&lt;p&gt;设计模式相关的还推荐《敏捷软件开发 — 原则、模式与实践》作者Robert C.Martin和《设计模式 — 可复用面向对象软件的基础》四人帮写的这两本书。前者对设计原则有详细描述，后者主要涉及经典的设计模式讲解。&lt;/p&gt;
&lt;p&gt;本文主要引用内容主要出自《敏捷软件开发 — 原则、模式与实践》和《Android源码设计模式》。&lt;/p&gt;
    
    </summary>
    
      <category term="设计模式" scheme="http://www.shutu.tech/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="http://www.shutu.tech/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>《App研发录》总结</title>
    <link href="http://www.shutu.tech/2016/07/24/%E3%80%8AApp%E7%A0%94%E5%8F%91%E5%BD%95%E3%80%8B--%20%E8%AF%BB%E4%B9%A6%E6%80%BB%E7%BB%93/"/>
    <id>http://www.shutu.tech/2016/07/24/《App研发录》-- 读书总结/</id>
    <published>2016-07-24T03:55:46.000Z</published>
    <updated>2016-07-24T03:59:29.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h3&gt;&lt;p&gt;看这本书的时候，总感觉怪怪的。&lt;/p&gt;
&lt;p&gt;因为在地铁上看完的，作者书中基本都是他自己工作中遇到的问题和坑，虽说这样会让人感觉找到了解决方案，可以再进行深入的研究，可是某些地方介绍的有点片面，仅仅是引用部分博客就以偏概全了。还有可能是涉及的内容大部分都是我自己已经踩过的坑，所以觉得学到的东西不太多。&lt;/p&gt;
&lt;p&gt;再说说值得一看的地方吧，首先也如前面提到的，书中内容基本都是作者工作之谈，所以有很实用的内容，推荐阅读章节：&lt;/p&gt;
&lt;h3 id=&quot;App竞品技术分析&quot;&gt;&lt;a href=&quot;#App竞品技术分析&quot; class=&quot;headerlink&quot; title=&quot;App竞品技术分析&quot;&gt;&lt;/a&gt;App竞品技术分析&lt;/h3&gt;&lt;p&gt;个人认为这是本书的精华，很少看到有人愿意这样详尽的介绍自己的“机密”经验，感谢作者的无私分享。&lt;/p&gt;
&lt;h3 id=&quot;五、六、七章的异常和ProGuard&quot;&gt;&lt;a href=&quot;#五、六、七章的异常和ProGuard&quot; class=&quot;headerlink&quot; title=&quot;五、六、七章的异常和ProGuard&quot;&gt;&lt;/a&gt;五、六、七章的异常和ProGuard&lt;/h3&gt;&lt;p&gt;介绍很详细，网上都是非常琐碎的介绍，推荐新人看看这部分，尤其是ProGuard，虽然现在第三方已经给出了完善的解决方案，帮我们做了这部分事情，不过了解最基本的原理才能学得更透彻。&lt;/p&gt;
&lt;h3 id=&quot;项目、团队管理部分&quot;&gt;&lt;a href=&quot;#项目、团队管理部分&quot; class=&quot;headerlink&quot; title=&quot;项目、团队管理部分&quot;&gt;&lt;/a&gt;项目、团队管理部分&lt;/h3&gt;&lt;p&gt;这部分是时间的积累才能收获的，提前学习了解以后我们必须经历的路没什么不好的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h3&gt;&lt;p&gt;看这本书的时候，总感觉怪怪的。&lt;/p&gt;
&lt;p&gt;因为在地铁上看完的，作者书中基本都是他自己工作中遇到的问题和坑，虽说这样会让人感觉找到了解决方
    
    </summary>
    
      <category term="读书" scheme="http://www.shutu.tech/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="Android" scheme="http://www.shutu.tech/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>《算法》</title>
    <link href="http://www.shutu.tech/2016/07/11/%E3%80%8A%E7%AE%97%E6%B3%95%E3%80%8B/"/>
    <id>http://www.shutu.tech/2016/07/11/《算法》/</id>
    <published>2016-07-11T13:16:08.000Z</published>
    <updated>2016-07-25T14:44:25.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;排序篇&quot;&gt;&lt;a href=&quot;#排序篇&quot; class=&quot;headerlink&quot; title=&quot;排序篇&quot;&gt;&lt;/a&gt;排序篇&lt;/h2&gt;&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;在数据结构与算法中，排序是面试笔试中最常被问到和提及的知识点，虽然在工作中很少用到相关的基础知识，但是对于基础的系统性学习却是必不可少的，通过学习和理解可以培养锻炼我们写代码的思维逻辑。多考虑性能，少制造垃圾代码。&lt;/p&gt;
&lt;p&gt;此书介绍得比较详细易懂，并且使用Java语言所以用到了很多相关的标准类库或模板，学习比较容易上手。同时还有另一本Java基础的书籍推荐《Introdution to Java Programming》（作者：Y. Daniel Liang），书中同样介绍了基础的数据结构与算法，并且图文并茂通俗易懂。&lt;/p&gt;
&lt;h4 id=&quot;重点&quot;&gt;&lt;a href=&quot;#重点&quot; class=&quot;headerlink&quot; title=&quot;重点&quot;&gt;&lt;/a&gt;重点&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;排序成本模型：&lt;/strong&gt;在研究排序算法时，需要计算&lt;strong&gt;比较&lt;/strong&gt;和&lt;strong&gt;交换&lt;/strong&gt;的数量，对于不交换元素的算法，会计算&lt;strong&gt;访问数组的次数&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;看法&quot;&gt;&lt;a href=&quot;#看法&quot; class=&quot;headerlink&quot; title=&quot;看法&quot;&gt;&lt;/a&gt;看法&lt;/h4&gt;&lt;p&gt;从2.1.5节的介绍，个人认为这几点是&lt;strong&gt;比较排序之间优缺点&lt;/strong&gt;的精髓：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;实现并调试&lt;/li&gt;
&lt;li&gt;分析它们的基本性质&lt;/li&gt;
&lt;li&gt;对它们的相对性能作出猜想&lt;/li&gt;
&lt;li&gt;实验验证猜想&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;选择排序&quot;&gt;&lt;a href=&quot;#选择排序&quot; class=&quot;headerlink&quot; title=&quot;选择排序&quot;&gt;&lt;/a&gt;选择排序&lt;/h3&gt;&lt;h4 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h4&gt;&lt;p&gt;理解上来说，就是两个for循环嵌套后，每一趟分别将数组中的每一个元素进行比较然后选出最小的那个移动到最左（顺序递增），最外层遍历N - 1趟，内层遍历N - 1 - i (i为外层index值)，所以显然选择排序中元素交换和数组的长度是&lt;strong&gt;线性关系&lt;/strong&gt;的。字面上解释就是，找出最小的那个元素，将其放到最左边。既然需要找出最小的元素，没有逐一比较怎么知道谁最小呢，所以比较次数必然较多。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;比较次数：(N - 1) + (N - 2) + … + 2 + 1 = (N - 1) / 2 &lt;em&gt; (1 + (N - 1)) ~ &lt;/em&gt;N² / 2*&lt;/li&gt;
&lt;li&gt;交换次数：N &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SelectionSort&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Comparable[] array)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; N = array.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; N; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; min = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; j &amp;lt; N; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (array[j] &amp;lt; array[min]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					min = j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// 把选择出来的当前最小的元素放到最左边&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (min != i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; temp = array[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				array[i] = array[min];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				array[min] = temp;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;插入排序&quot;&gt;&lt;a href=&quot;#插入排序&quot; class=&quot;headerlink&quot; title=&quot;插入排序&quot;&gt;&lt;/a&gt;插入排序&lt;/h3&gt;&lt;h4 id=&quot;分析-1&quot;&gt;&lt;a href=&quot;#分析-1&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h4&gt;&lt;p&gt;首先要知道插入排序的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;索引左侧的元素都是有序的；&lt;/li&gt;
&lt;li&gt;插入N次意味着会少比较N次；&lt;/li&gt;
&lt;li&gt;插入一个元素前需要将所有元素都向右移动一位留出插入的位置；&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;条件&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;比较次数&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;交换次数&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;平均情况&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;～ N² / 2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;～ N² / 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;最糟情况&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;～ N² / 4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;～ N² / 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;最好情况&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;N - 1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;适用场景&quot;&gt;&lt;a href=&quot;#适用场景&quot; class=&quot;headerlink&quot; title=&quot;适用场景&quot;&gt;&lt;/a&gt;适用场景&lt;/h4&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;数组中每个元素离它的位置都不远；&lt;/li&gt;
&lt;li&gt;一个有序的大数组接一个小数组；&lt;/li&gt;
&lt;li&gt;数组中只有几个元素位置不正确，大部分元素都是有序的；&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;代码-1&quot;&gt;&lt;a href=&quot;#代码-1&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;InsertionSort&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Comparabale[] array)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; N = array.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; N ; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = i; j &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; less(array[j], array[j - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]); j-- ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				exchange(array, j, j - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;less&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (a - b &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) ? &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt; : &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;exchange&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Comparabale[] array, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i, j)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; temp = array[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		array[i] = array[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		array[j] = temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;归并排序&quot;&gt;&lt;a href=&quot;#归并排序&quot; class=&quot;headerlink&quot; title=&quot;归并排序&quot;&gt;&lt;/a&gt;归并排序&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;排序篇&quot;&gt;&lt;a href=&quot;#排序篇&quot; class=&quot;headerlink&quot; title=&quot;排序篇&quot;&gt;&lt;/a&gt;排序篇&lt;/h2&gt;&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;在数据结构与算法中，排序是面试笔试中最常被问到和提及的知识点，虽然在工作中很少用到相关的基础知识，但是对于基础的系统性学习却是必不可少的，通过学习和理解可以培养锻炼我们写代码的思维逻辑。多考虑性能，少制造垃圾代码。&lt;/p&gt;
&lt;p&gt;此书介绍得比较详细易懂，并且使用Java语言所以用到了很多相关的标准类库或模板，学习比较容易上手。同时还有另一本Java基础的书籍推荐《Introdution to Java Programming》（作者：Y. Daniel Liang），书中同样介绍了基础的数据结构与算法，并且图文并茂通俗易懂。&lt;/p&gt;
&lt;h4 id=&quot;重点&quot;&gt;&lt;a href=&quot;#重点&quot; class=&quot;headerlink&quot; title=&quot;重点&quot;&gt;&lt;/a&gt;重点&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;排序成本模型：&lt;/strong&gt;在研究排序算法时，需要计算&lt;strong&gt;比较&lt;/strong&gt;和&lt;strong&gt;交换&lt;/strong&gt;的数量，对于不交换元素的算法，会计算&lt;strong&gt;访问数组的次数&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://www.shutu.tech/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Algorithms" scheme="http://www.shutu.tech/tags/Algorithms/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode刷题系列</title>
    <link href="http://www.shutu.tech/2016/07/02/LeetCode%E5%88%B7%E9%A2%98%E7%B3%BB%E5%88%97/"/>
    <id>http://www.shutu.tech/2016/07/02/LeetCode刷题系列/</id>
    <published>2016-07-01T23:06:38.000Z</published>
    <updated>2016-07-19T16:29:26.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;LeetCode&quot;&gt;&lt;a href=&quot;#LeetCode&quot; class=&quot;headerlink&quot; title=&quot;LeetCode&quot;&gt;&lt;/a&gt;LeetCode&lt;/h4&gt;&lt;p&gt;我们工作面试和提高自身数据结构和算法能力的时候往往需要刷刷题，我选择LeetCode是通过一个&lt;a href=&quot;http://www.1point3acres.com/bbs/forum-27-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;留学论坛&lt;/a&gt;了解的。专业，覆盖语种全面。&lt;/p&gt;
&lt;p&gt;提前说说刷题的心得：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尽量手写代码，少使用IDE的代码补全和智能提示。既然是提升和锻炼自己的代码功底，那就没有理由再犯&lt;strong&gt;没有IDE写代码会死症&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;让自己去思考本身就是一件艰难的事，所以如果遇到困难，可以借鉴但切不可抄袭他人思考成果。不然刷题就没有意义了，别贪多贪快，自己思考的才是最好的&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;进入&lt;a href=&quot;https://leetcode.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeetCode官方网站&lt;/a&gt;，你会看到醒目的&lt;strong&gt;&lt;a href=&quot;https://leetcode.com/problems/unique-paths/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Start coding now&lt;/a&gt;&lt;/strong&gt;，没有账号的同学赶快注册吧，点击此处可以进入题目分类，接着可以根据自己的实际情况，通过难易程度选择题目（PS: 带锁的需要花钱），我是先易后难，找点信心再说 😂。&lt;/p&gt;
&lt;p&gt;选择题目后就开始刷题之旅吧，官方提供多种语言的支持，可以实时运行检测代码，也可以自己设置自定的Testcase，介绍到此，祝各位刷题愉快，学业有成，工作顺利～&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eterrao/eterrao.github.io/master/LeetCode%E5%88%B7%E9%A2%98%E9%A1%B5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;题目预览表&quot;&gt;&lt;a href=&quot;#题目预览表&quot; class=&quot;headerlink&quot; title=&quot;题目预览表&quot;&gt;&lt;/a&gt;题目预览表&lt;/h4&gt;&lt;p&gt;由易到难排序，目前官网总共出了390+&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;#&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Title&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Difficulty&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;344&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/reverse-string/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reverse String&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Easy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/two-sum/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Two Sum&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Easy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;371&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/sum-of-two-integers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sum of Two Integers&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Easy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;7&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/reverse-integer/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reverse Integer&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Easy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;75&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://leetcode.com/problems/sort-colors/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sort Colors&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Medium&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;344-Reverse-String&quot;&gt;&lt;a href=&quot;#344-Reverse-String&quot; class=&quot;headerlink&quot; title=&quot;344. Reverse String&quot;&gt;&lt;/a&gt;344. Reverse String&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Write a function that takes a string as input and returns the string reversed.&lt;/p&gt;
&lt;p&gt;译：输入一段字符串将其倒序并返回&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;Given s = “hello”, return “olleh”.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;reverseString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (s == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; || s.length() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		StringBuilder sb = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringBuilder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index = s.length() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ; index &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; --index )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; temp = s.charAt(index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sb.append(temp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sb.toString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;问题分析：&quot;&gt;&lt;a href=&quot;#问题分析：&quot; class=&quot;headerlink&quot; title=&quot;问题分析：&quot;&gt;&lt;/a&gt;问题分析：&lt;/h4&gt;&lt;p&gt;作为最简单的题，我刚开始写的时候也遇到一些坑：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;忽略空格、回车的存在，结果检测的时候不过关&lt;/li&gt;
&lt;li&gt;没有没有考虑性能问题，仅仅在乎结果是否正确&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&quot;1-Two-Sum&quot;&gt;&lt;a href=&quot;#1-Two-Sum&quot; class=&quot;headerlink&quot; title=&quot;1. Two Sum&quot;&gt;&lt;/a&gt;1. Two Sum&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Given an array of integers, return &lt;strong&gt;indices&lt;/strong&gt; of the two numbers such that they add up to a specific target.&lt;/p&gt;
&lt;p&gt;You may assume that each input would have &lt;strong&gt;exactly&lt;/strong&gt; one solution.&lt;/p&gt;
&lt;p&gt;译：给定两个只有整数的数组，获取和为指定数值的两个数的索引&lt;/p&gt;
&lt;p&gt;需要假设每个输入的值都仅有一个答案&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; Given nums = [2, 7, 11, 15], target = 9,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; Because nums[0] + nums[1] = 2 + 7 = 9,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; return [0, 1].&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;UPDATE (2016/2/13):&lt;/strong&gt;&lt;br&gt;The return format had been changed to &lt;strong&gt;zero-based&lt;/strong&gt; indices. Please read the above updated description carefully.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] twoSum(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] nums, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; target) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] result = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; k = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; k &amp;lt; nums.length; k++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l = k + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; l &amp;lt; nums.length; l++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[k] + nums[l] == target) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; p : nums) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[k] == p) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[l] == p) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = l;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;问题分析：-1&quot;&gt;&lt;a href=&quot;#问题分析：-1&quot; class=&quot;headerlink&quot; title=&quot;问题分析：&quot;&gt;&lt;/a&gt;问题分析：&lt;/h4&gt;&lt;p&gt;从问题来看，由于题目给了限制，也就是说给定的数组中肯定仅有两个数满足条件，我使用简单的冒泡挨个相加判断是否满足条件而得到答案。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一/二层通过嵌套for循环遍历数组中每个数与其他数之和&lt;/li&gt;
&lt;li&gt;取得两个数后，通过第三个增强for获取两个数在元数组中的索引&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&quot;371-Sum-of-Two-Integers&quot;&gt;&lt;a href=&quot;#371-Sum-of-Two-Integers&quot; class=&quot;headerlink&quot; title=&quot;371. Sum of Two Integers&quot;&gt;&lt;/a&gt;371. Sum of Two Integers&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Calculate the sum of two integers &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, but you are &lt;strong&gt;not allowed&lt;/strong&gt; to use the operator &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;译：不用+或者-符号，计算出两个数之和&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Given &lt;em&gt;a&lt;/em&gt; = 1 and &lt;em&gt;b&lt;/em&gt; = 2, return 3.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getSum&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// todo ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;问题分析：-2&quot;&gt;&lt;a href=&quot;#问题分析：-2&quot; class=&quot;headerlink&quot; title=&quot;问题分析：&quot;&gt;&lt;/a&gt;问题分析：&lt;/h4&gt;&lt;hr&gt;
&lt;h4 id=&quot;7-Reverse-Integer&quot;&gt;&lt;a href=&quot;#7-Reverse-Integer&quot; class=&quot;headerlink&quot; title=&quot;7. Reverse Integer&quot;&gt;&lt;/a&gt;7. Reverse Integer&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Reverse digits of an integer.&lt;/p&gt;
&lt;p&gt;译：反转一个整数的数字&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example1:&lt;/strong&gt; x = 123, return 321&lt;br&gt;&lt;strong&gt;Example2:&lt;/strong&gt; x = -123, return -321&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/reverse-integer/#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;click to show spoilers.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Have you thought about this?&lt;/strong&gt;Here are some good questions to ask before coding. Bonus points for you if you have already thought through this!If the integer’s last digit is 0, what should the output be? ie, cases such as 10, 100.Did you notice that the reversed integer might overflow? Assume the input is a 32-bit integer, then the reverse of 1000000003 overflows. How should you handle such cases?For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.&lt;/p&gt;
&lt;p&gt;译：你仔细思考过么？写代码前需要考虑到的一些问题，比如你已经考虑到这个整数的最后一个数为0，那么我们应该输出什么呢？例如：输入10，100。你注意到反转的数可能会溢出吗？假设你输入了一个32位的整数，如1000000003反过来就会导致溢出。那你怎么处理这些情况呢？所以对于这个问题来说我们假设如果你反转的数是溢出的，那么就指定它返回0。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ReverseInteger&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isNegativeNum = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (x == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 考虑到为0的情况直接返回0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (x &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;// 如果该数为负数，则使用标志位，并且为了去掉符号实用Math.abs()这个方法取绝对值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            isNegativeNum = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            x = Math.abs(x); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String xString = String.valueOf(x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String result = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index = xString.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      	&lt;span class=&quot;comment&quot;&gt;// 时间复杂度最糟为O(n)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = index - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result += String.valueOf(xString.charAt(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		  &lt;span class=&quot;comment&quot;&gt;// 此处投机取巧，由于反转后的数可能溢出，导致NumberFormatException，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//所以一旦catch该异常就指定该数为0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isNegativeNum) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Integer.valueOf(result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (- Integer.parseInt(result));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (NumberFormatException e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;headerlink&quot; title=&quot;问题分析&quot;&gt;&lt;/a&gt;问题分析&lt;/h4&gt;&lt;p&gt;需要注意几个点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;题目已经说明了，一旦有溢出的情况就返回0；&lt;/li&gt;
&lt;li&gt;如果正好为尾数为0的整数，那么反转后实际需要舍弃0；&lt;/li&gt;
&lt;li&gt;正好为0的情况需要考虑到&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近在看《剑指OFFER》，其中提到的边界问题和非法输入的处理尤为重要，所以写的时候都很小心这方面的问题&lt;/p&gt;
&lt;h4 id=&quot;75-Sort-Colors&quot;&gt;&lt;a href=&quot;#75-Sort-Colors&quot; class=&quot;headerlink&quot; title=&quot;75. Sort Colors&quot;&gt;&lt;/a&gt;75. Sort Colors&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Given an array with &lt;em&gt;n&lt;/em&gt; objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue.&lt;/p&gt;
&lt;p&gt;Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.&lt;/p&gt;
&lt;p&gt;译： 给定一个大小为n的数组，其中包含的元素对象为红、白、蓝，将其进行毗连的排序，顺序为红、白、蓝。在此我们用0，1，2来代表红白蓝三个颜色。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sortColors&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] nums)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums.length &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       ArrayList&amp;lt;Integer&amp;gt; redList = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       ArrayList&amp;lt;Integer&amp;gt; whiteList = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       ArrayList&amp;lt;Integer&amp;gt; blueList = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; currentColor : nums)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentColor == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               redList.add(currentColor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentColor == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               whiteList.add(currentColor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentColor == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               blueList.add(currentColor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       redList.addAll(whiteList);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       redList.addAll(blueList);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; color : redList)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           nums[i] = color;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;问题分析-1&quot;&gt;&lt;a href=&quot;#问题分析-1&quot; class=&quot;headerlink&quot; title=&quot;问题分析&quot;&gt;&lt;/a&gt;问题分析&lt;/h4&gt;&lt;p&gt;看起来越简单清晰的题，越需要谨慎的对待&lt;/p&gt;
&lt;p&gt;首先题中已经给定了数组，虽然三种颜色是随机的，但是可以遍历出每种颜色的数量，在此我将每种颜色使用一个ArrayList存放（个人感觉这么做是最笨的办法），分成三个list后再组合成一个数组。&lt;/p&gt;
&lt;p&gt;代码中的两个for的时间复杂度分别为N，总的为2N。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;LeetCode&quot;&gt;&lt;a href=&quot;#LeetCode&quot; class=&quot;headerlink&quot; title=&quot;LeetCode&quot;&gt;&lt;/a&gt;LeetCode&lt;/h4&gt;&lt;p&gt;我们工作面试和提高自身数据结构和算法能力的时候往往需要刷刷题，我选择LeetCode是通过一个&lt;a href=&quot;http://www.1point3acres.com/bbs/forum-27-1.html&quot;&gt;留学论坛&lt;/a&gt;了解的。专业，覆盖语种全面。&lt;/p&gt;
&lt;p&gt;提前说说刷题的心得：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尽量手写代码，少使用IDE的代码补全和智能提示。既然是提升和锻炼自己的代码功底，那就没有理由再犯&lt;strong&gt;没有IDE写代码会死症&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;让自己去思考本身就是一件艰难的事，所以如果遇到困难，可以借鉴但切不可抄袭他人思考成果。不然刷题就没有意义了，别贪多贪快，自己思考的才是最好的&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="http://www.shutu.tech/categories/LeetCode/"/>
    
    
      <category term="Java刷题" scheme="http://www.shutu.tech/tags/Java%E5%88%B7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>《Thinking in Java》知识点记录</title>
    <link href="http://www.shutu.tech/2016/07/01/ThinkingInJava/"/>
    <id>http://www.shutu.tech/2016/07/01/ThinkingInJava/</id>
    <published>2016-07-01T11:57:45.000Z</published>
    <updated>2016-07-01T12:01:35.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;《Thinking-in-Java》&quot;&gt;&lt;a href=&quot;#《Thinking-in-Java》&quot; class=&quot;headerlink&quot; title=&quot;《Thinking in Java》&quot;&gt;&lt;/a&gt;《Thinking in Java》&lt;/h4&gt;&lt;h4 id=&quot;final关键词的总结&quot;&gt;&lt;a href=&quot;#final关键词的总结&quot; class=&quot;headerlink&quot; title=&quot;final关键词的总结&quot;&gt;&lt;/a&gt;final关键词的总结&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;可能使用到final的三种情况：&lt;strong&gt;数据&lt;/strong&gt;，&lt;strong&gt;方法&lt;/strong&gt;，&lt;strong&gt;类&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;final数据&quot;&gt;&lt;a href=&quot;#final数据&quot; class=&quot;headerlink&quot; title=&quot;final数据&quot;&gt;&lt;/a&gt;final数据&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;对于基本类型：final使数值不做改变&lt;/li&gt;
&lt;li&gt;对于对象引用：final使引用总是指向初始化时的对象，无法改变其指向另一个对象，但被引用的对象自身是可以改变的&lt;/li&gt;
&lt;li&gt;一个既是static又是final的域只占据一段不能改变的数据存储空间&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h5 id=&quot;空白final&quot;&gt;&lt;a href=&quot;#空白final&quot; class=&quot;headerlink&quot; title=&quot;空白final&quot;&gt;&lt;/a&gt;空白final&lt;/h5&gt;&lt;p&gt;指被声明final但未赋初值的域。空白final必须在域的定义处或者构造函数中进行初始化。&lt;/p&gt;
&lt;p&gt;优点：灵活，不用先写死，因此创建类的实例时，可以传入参数对其进行构造函数中的初始化赋值。&lt;/p&gt;
&lt;h5 id=&quot;final参数：&quot;&gt;&lt;a href=&quot;#final参数：&quot; class=&quot;headerlink&quot; title=&quot;final参数：&quot;&gt;&lt;/a&gt;final参数：&lt;/h5&gt;&lt;p&gt;意味着无法在方法中修改参数所引用的对象，可以读取参数，但却无法修改它。有经验的朋友都知道一旦创建匿名内部类的实例时，其引用到的外部参数都需要被指定为final，保证匿名内部类运行的正确性。&lt;/p&gt;
&lt;h5 id=&quot;final方法&quot;&gt;&lt;a href=&quot;#final方法&quot; class=&quot;headerlink&quot; title=&quot;final方法&quot;&gt;&lt;/a&gt;final方法&lt;/h5&gt;&lt;p&gt;实用原因有二：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;锁定该方法，使继承该类的子类无法修改此方法的含义，想要保证方法的行为保持不变，&lt;strong&gt;不被覆盖&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;效率，早期Java如果指定一个方法为final，那么就意味着同意编译器将针对该方法的所有调用都转为内嵌调用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但近期Java版本已经无需这么做了。只有在想要明确禁止覆盖时才将方法设置为final。&lt;/p&gt;
&lt;p&gt;类中所有private方法都隐式地指定为是final的。private肯定无法被外部类调用和继承使用，那么意味着不会被覆盖。可以指定private为final，但无意义。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;《Thinking-in-Java》&quot;&gt;&lt;a href=&quot;#《Thinking-in-Java》&quot; class=&quot;headerlink&quot; title=&quot;《Thinking in Java》&quot;&gt;&lt;/a&gt;《Thinking in Java》&lt;/h4&gt;&lt;h4 id=&quot;final关键词的总结&quot;&gt;&lt;a href=&quot;#final关键词的总结&quot; class=&quot;headerlink&quot; title=&quot;final关键词的总结&quot;&gt;&lt;/a&gt;final关键词的总结&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;可能使用到final的三种情况：&lt;strong&gt;数据&lt;/strong&gt;，&lt;strong&gt;方法&lt;/strong&gt;，&lt;strong&gt;类&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;final数据&quot;&gt;&lt;a href=&quot;#final数据&quot; class=&quot;headerlink&quot; title=&quot;final数据&quot;&gt;&lt;/a&gt;final数据&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;对于基本类型：final使数值不做改变&lt;/li&gt;
&lt;li&gt;对于对象引用：final使引用总是指向初始化时的对象，无法改变其指向另一个对象，但被引用的对象自身是可以改变的&lt;/li&gt;
&lt;li&gt;一个既是static又是final的域只占据一段不能改变的数据存储空间&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Java" scheme="http://www.shutu.tech/categories/Java/"/>
    
    
      <category term="Java" scheme="http://www.shutu.tech/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记 -- 《暗时间》</title>
    <link href="http://www.shutu.tech/2016/06/29/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E3%80%8A%E6%9A%97%E6%97%B6%E9%97%B4%E3%80%8B/"/>
    <id>http://www.shutu.tech/2016/06/29/读书笔记-《暗时间》/</id>
    <published>2016-06-29T15:07:42.000Z</published>
    <updated>2016-07-16T16:52:28.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;关于这本书，是通过知乎了解的，不犹豫的下单，结果一发不可收拾。不得不说，作者刘未鹏真的很NB。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eterrao/eterrao.github.io/master/%E6%9A%97%E6%97%B6%E9%97%B4.jpg&quot; alt=&quot;暗时间&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;心得&quot;&gt;&lt;a href=&quot;#心得&quot; class=&quot;headerlink&quot; title=&quot;心得&quot;&gt;&lt;/a&gt;心得&lt;/h4&gt;&lt;p&gt;懒惰的我很少写这种读书笔记，但是既然读了这本书，那么就应该做些什么才对，例如总结阅读后的知识点，问题深思后的理论分析等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缺点：&lt;ul&gt;
&lt;li&gt;在详细总结这本书的时候，先说说看了一半后感觉到的不足吧。首先是总觉得这本书是在记叙成功学的书，虽然成功没有什么不好，人人都希望成功，但长篇提及成功的字眼让我感觉有点难受。这是一本思维导图，时间、自我管理的书籍，如果没有那么多的字眼就完美了。可能是因为我看了《把时间当作朋友》书中提及反对成功学的部分，从此对所谓成功学说心生厌恶。&lt;/li&gt;
&lt;li&gt;如豆友所说的，连贯性不够。如作者提及的，看书要择优选择阅读，所以部分章节我仅仅是粗略的扫了一眼，这本书是挤地铁的时候看的，所以没有那么多精力仔细集中在某些需要细思的章节中，如”逃出你的肖申克“。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点说完了，我该感激作者了，所谓先抑后扬。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;环境的重要性&quot;&gt;&lt;a href=&quot;#环境的重要性&quot; class=&quot;headerlink&quot; title=&quot;环境的重要性&quot;&gt;&lt;/a&gt;环境的重要性&lt;/h4&gt;&lt;p&gt;如果作者没有一位耐心、专注的父亲作为榜样来引导自己，或许会花更多时间来悟出书中的感想。毕竟父母是我们一辈子最好的老师。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;写一个博客有很多好处，却没有任何明显的坏处&lt;/p&gt;
&lt;p&gt;书写是为了更好的思考&lt;/p&gt;
&lt;p&gt;如果一件事情你不能讲清楚，十有八九你还没有完全理解&lt;/p&gt;
&lt;p&gt;博客可以激励你去持续学习和思考，如果你没有持续学习和思考的习惯，你的博客很快就没有内容可写，就只能碎碎念或者转载。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此前我一直希望能够写出NB精彩绝伦的博客，引来无数网友的围观和赞赏，以此满足自己的虚荣心并且可以当作找工作的敲门砖。庆幸早读这本书，不然走向不归路啊，我一直没有耐心去写完一篇我满意的博客，原因之一就是每次写什么的时候，根本没有透彻的思考问题，导致写着写着感觉和别人的都一样雷同，千篇一律的像工具说明书一样没有什么价值所在，于是存为草稿，之后只会变为删除草稿的结局。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;让你自己成为一个持续学习和思考的人，并只写你真正思考和总结之后的产物，其他的一切就会随之而来&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;尤为喜欢这句话，所以今天把曾经的博文都整理了一遍，垃圾该清理的清理，接下来学习深度总结和思考，不跟风随波逐流。&lt;/p&gt;
&lt;h4 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h4&gt;&lt;p&gt;仅仅接触此书两天不到的时间，之后每次写代码之前，都会有意识的去思考更多，不再像曾经拿着就开始着手实现业务逻辑，更注重设计模式，架构的重要性。真的是这种感觉。&lt;/p&gt;
&lt;p&gt;暂时就这么多，看完再说吧。&lt;/p&gt;
&lt;h4 id=&quot;近期感悟&quot;&gt;&lt;a href=&quot;#近期感悟&quot; class=&quot;headerlink&quot; title=&quot;近期感悟&quot;&gt;&lt;/a&gt;近期感悟&lt;/h4&gt;&lt;p&gt;直到”跟波利亚学解题”，已经一周没看这本书了，但是工作之余却反思和遵循一些书中所说的行为或者技巧，如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;充分利用自己的暗时间，就相当于自己多活了一段时间&lt;/li&gt;
&lt;li&gt;每个人都有自己的思维体力，需要锻炼才能持续更长更久&lt;/li&gt;
&lt;li&gt;嘈杂的环境看书是最能锻炼注意力的（地铁上）&lt;/li&gt;
&lt;li&gt;睡觉前思考一些问题，让大脑长时间保持对问题的思考，潜意识就能解决很多问题&lt;/li&gt;
&lt;li&gt;最近正在复习数据结构与算法，每当自己觉得明白了以后，会习惯的反问和思考自己是否真的理解透彻了，受益匪浅；&lt;/li&gt;
&lt;li&gt;每当走在路上的时候，曾经的我会看天看地看人，如今却总觉得这部分暗时间需要利用起来，毕竟我也想“多活一段时间”嘛；&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;“跟波利亚学解题”后篇&quot;&gt;&lt;a href=&quot;#“跟波利亚学解题”后篇&quot; class=&quot;headerlink&quot; title=&quot;“跟波利亚学解题”后篇&quot;&gt;&lt;/a&gt;“跟波利亚学解题”后篇&lt;/h4&gt;&lt;p&gt;今天又继续阅读”跟波利亚学解题”，发现以前的我好傻，庆幸现在还不晚。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;学会总结，一个问题从理解到运用相差十万八千里，所以曾经做题并不是看完答案恍然大悟就可以了，而需要仔细思考实现的思想，把能够举一反三的部分提取出来；&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;关于这本书，是通过知乎了解的，不犹豫的下单，结果一发不可收拾。不得不说，作者刘未鹏真的很NB。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eterrao/eterrao.github.io/master/%E6%9A%97%E6%97%B6%E9%97%B4.jpg&quot; alt=&quot;暗时间&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;心得&quot;&gt;&lt;a href=&quot;#心得&quot; class=&quot;headerlink&quot; title=&quot;心得&quot;&gt;&lt;/a&gt;心得&lt;/h4&gt;&lt;p&gt;懒惰的我很少写这种读书笔记，但是既然读了这本书，那么就应该做些什么才对，例如总结阅读后的知识点，问题深思后的理论分析等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缺点：&lt;ul&gt;
&lt;li&gt;在详细总结这本书的时候，先说说看了一半后感觉到的不足吧。首先是总觉得这本书是在记叙成功学的书，虽然成功没有什么不好，人人都希望成功，但长篇提及成功的字眼让我感觉有点难受。这是一本思维导图，时间、自我管理的书籍，如果没有那么多的字眼就完美了。可能是因为我看了《把时间当作朋友》书中提及反对成功学的部分，从此对所谓成功学说心生厌恶。&lt;/li&gt;
&lt;li&gt;如豆友所说的，连贯性不够。如作者提及的，看书要择优选择阅读，所以部分章节我仅仅是粗略的扫了一眼，这本书是挤地铁的时候看的，所以没有那么多精力仔细集中在某些需要细思的章节中，如”逃出你的肖申克“。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点说完了，我该感激作者了，所谓先抑后扬。&lt;/p&gt;
    
    </summary>
    
      <category term="读书" scheme="http://www.shutu.tech/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="时间管理，思维导图" scheme="http://www.shutu.tech/tags/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%EF%BC%8C%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建博客的几个小问题</title>
    <link href="http://www.shutu.tech/2016/06/26/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%87%A0%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
    <id>http://www.shutu.tech/2016/06/26/hexo搭建博客的几个小问题/</id>
    <published>2016-06-26T14:04:53.000Z</published>
    <updated>2016-07-08T16:20:59.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;所有博客显示未命名-untitled&quot;&gt;&lt;a href=&quot;#所有博客显示未命名-untitled&quot; class=&quot;headerlink&quot; title=&quot;所有博客显示未命名(untitled)&quot;&gt;&lt;/a&gt;所有博客显示未命名(untitled)&lt;/h4&gt;&lt;p&gt;因为接触hexo不多，刚开始写的博客都是通过自己创建MarkDown文件导入到post中的，所以自然没有前缀，解决方式如下即可&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#以如下格式输入相应的字段&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: hexo搭建博客的几个小问题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-06-26 22:04:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#####正文内容&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;hexo在generate的时候会自动索引当前文件的标题、时间和tags等&lt;/p&gt;
&lt;h4 id=&quot;博客首页折叠&quot;&gt;&lt;a href=&quot;#博客首页折叠&quot; class=&quot;headerlink&quot; title=&quot;博客首页折叠&quot;&gt;&lt;/a&gt;博客首页折叠&lt;/h4&gt;&lt;p&gt;部署后发现首页的文章都是全部预览的，但别人的都是有个&lt;strong&gt;阅读全文&lt;/strong&gt;，其实在MD文件中添加一行代码就搞定了&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#####首页显示内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- more --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#####隐藏内容&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;hexo部署后，CNAME会被自动删除&quot;&gt;&lt;a href=&quot;#hexo部署后，CNAME会被自动删除&quot; class=&quot;headerlink&quot; title=&quot;hexo部署后，CNAME会被自动删除&quot;&gt;&lt;/a&gt;hexo部署后，CNAME会被自动删除&lt;/h4&gt;&lt;p&gt;将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;hexo创建新文章&quot;&gt;&lt;a href=&quot;#hexo创建新文章&quot; class=&quot;headerlink&quot; title=&quot;hexo创建新文章&quot;&gt;&lt;/a&gt;hexo创建新文章&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &amp;quot;your file name&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该命令会在source/_post/目录下生成一个your-file-name.md文件，文件会默认附带标题、时间和tag/category等开头，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: hexo搭建博客的几个小问题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-06-26 22:04:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;hexo创建新的分类&quot;&gt;&lt;a href=&quot;#hexo创建新的分类&quot; class=&quot;headerlink&quot; title=&quot;hexo创建新的分类&quot;&gt;&lt;/a&gt;hexo创建新的分类&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new page &amp;quot;your page name&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此时需要在scaffolds/post.md文件中添加一行你的分类，例如：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: &amp;#123;&amp;#123; title &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: &amp;#123;&amp;#123; date &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;categories: # 添加该行，新增的分类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多请参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next/wiki/%E5%88%9B%E5%BB%BA%E5%88%86%E7%B1%BB%E9%A1%B5%E9%9D%A2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;创建分类页面&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next/issues/51&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于categories和tags的问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://ijiaober.github.io/2014/08/05/hexo/hexo-04/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo的分类和标签设置&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;hexo创建草稿&quot;&gt;&lt;a href=&quot;#hexo创建草稿&quot; class=&quot;headerlink&quot; title=&quot;hexo创建草稿&quot;&gt;&lt;/a&gt;hexo创建草稿&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new draft &amp;quot;your draft file name&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该命令会在source/下创建一个与&lt;strong&gt;_post&lt;/strong&gt;对应的&lt;strong&gt;_draft&lt;/strong&gt;文件夹，其中存放待编辑的草稿，而草稿不会影响正常的生成（hexo generate）部署（hexo deploy）&lt;/p&gt;
&lt;h4 id=&quot;hexo草稿预览&quot;&gt;&lt;a href=&quot;#hexo草稿预览&quot; class=&quot;headerlink&quot; title=&quot;hexo草稿预览&quot;&gt;&lt;/a&gt;hexo草稿预览&lt;/h4&gt;&lt;p&gt;如果需要预览草稿可以使用下面的命令进行预览&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server --draft&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;hexo草稿发布&quot;&gt;&lt;a href=&quot;#hexo草稿发布&quot; class=&quot;headerlink&quot; title=&quot;hexo草稿发布&quot;&gt;&lt;/a&gt;hexo草稿发布&lt;/h4&gt;&lt;p&gt;草稿编写完成后需要生成到public中并且进行部署，使用如下命令即可：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo publish &amp;quot;your draft file name&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多请参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://oomusou.io/hexo/hexo-draft/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何使用Hexo寫草稿&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;所有博客显示未命名-untitled&quot;&gt;&lt;a href=&quot;#所有博客显示未命名-untitled&quot; class=&quot;headerlink&quot; title=&quot;所有博客显示未命名(untitled)&quot;&gt;&lt;/a&gt;所有博客显示未命名(untitled)&lt;/h4&gt;&lt;p&gt;因为接触hexo不多，刚开始写的博客都是通过自己创建MarkDown文件导入到post中的，所以自然没有前缀，解决方式如下即可&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#以如下格式输入相应的字段&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: hexo搭建博客的几个小问题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-06-26 22:04:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#####正文内容&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;hexo在generate的时候会自动索引当前文件的标题、时间和tags等&lt;/p&gt;
&lt;h4 id=&quot;博客首页折叠&quot;&gt;&lt;a href=&quot;#博客首页折叠&quot; class=&quot;headerlink&quot; title=&quot;博客首页折叠&quot;&gt;&lt;/a&gt;博客首页折叠&lt;/h4&gt;&lt;p&gt;部署后发现首页的文章都是全部预览的，但别人的都是有个&lt;strong&gt;阅读全文&lt;/strong&gt;，其实在MD文件中添加一行代码就搞定了&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#####首页显示内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- more --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#####隐藏内容&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;hexo部署后，CNAME会被自动删除&quot;&gt;&lt;a href=&quot;#hexo部署后，CNAME会被自动删除&quot; class=&quot;headerlink&quot; title=&quot;hexo部署后，CNAME会被自动删除&quot;&gt;&lt;/a&gt;hexo部署后，CNAME会被自动删除&lt;/h4&gt;&lt;p&gt;将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.shutu.tech/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Android常用的几种格式：NV21/NV12/YV12/YUV420P的区别</title>
    <link href="http://www.shutu.tech/2016/06/13/DifferenceOfYUV/"/>
    <id>http://www.shutu.tech/2016/06/13/DifferenceOfYUV/</id>
    <published>2016-06-13T13:26:08.000Z</published>
    <updated>2016-06-27T16:14:00.000Z</updated>
    
    <content type="html">&lt;h5 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h5&gt;&lt;p&gt;　　因工作方面接触到图像处理这一块，需要对手机摄像头采集的原始帧做Rotate或者Scale，但无奈对此的了解少之又少，于是网上搜了一顿，完事后将最近所学总结一下，以方便之后的人别踩太多坑。  &lt;/p&gt;
&lt;p&gt;　　首先想要了解YUV为何物:&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/aa904813&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;请猛戳我&lt;/a&gt;　　&lt;/p&gt;
&lt;p&gt;　　上面的链接中微软已经写的很详细了，国内大部分文章都是翻译这篇文章的，如果还有疑问的同学可以参考下面这些大神的博客：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/leixiaohua1020/article/details/42134965&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;最简单的基于FFmpeg的libswscale的示例（YUV转RGB）&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/azraelly/archive/2013/01/01/2841269.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;图文详解YUV420数据格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tangzm.com/blog/?p=18&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ANDROID 高性能图形处理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/yanzi1225627/article/details/8626411&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android摄像头开发：实时摄像头视频预览帧的编码问题（二）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;p&gt;　　看完上面的文章应该都会有所了解和认识了，因为在&lt;strong&gt;Android SDK &amp;lt;= 20（Android5.0）&lt;/strong&gt;中Google支持的Camera Preview Callback的YUV常用格式有两种：NV21 / YV12，在此针对这两种格式做分析。&lt;/p&gt;
&lt;h5 id=&quot;NV21：&quot;&gt;&lt;a href=&quot;#NV21：&quot; class=&quot;headerlink&quot; title=&quot;NV21：&quot;&gt;&lt;/a&gt;NV21：&lt;/h5&gt;&lt;p&gt;引用一段微软的叙述：&lt;/p&gt;
&lt;h6 id=&quot;4-2-0-Formats-12-Bits-per-Pixel&quot;&gt;&lt;a href=&quot;#4-2-0-Formats-12-Bits-per-Pixel&quot; class=&quot;headerlink&quot; title=&quot;4:2:0 Formats, 12 Bits per Pixel&quot;&gt;&lt;/a&gt;4:2:0 Formats, 12 Bits per Pixel&lt;/h6&gt;&lt;blockquote&gt;
&lt;p&gt;Four 4:2:0 12-bpp formats are recommended, with the following FOURCC codes:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IMC2  &lt;/li&gt;
&lt;li&gt;IMC4  &lt;/li&gt;
&lt;li&gt;YV12  &lt;/li&gt;
&lt;li&gt;NV12&lt;br&gt;  In all of these formats, the chroma channels are subsampled by a factor of two in both the horizontal and vertical dimensions. &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;YV12&quot;&gt;&lt;a href=&quot;#YV12&quot; class=&quot;headerlink&quot; title=&quot;YV12&quot;&gt;&lt;/a&gt;YV12&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;All of the Y samples appear first in memory as an array of unsigned char values.&lt;/code&gt; This array is followed immediately by all of the V (Cr) samples. The stride of the V plane is half the stride of the Y plane, and the V plane contains half as many lines as the Y plane. The V plane is followed immediately by all of the U (Cb) samples, with the same stride and number of lines as the V plane (Figure 12).&lt;br&gt;&lt;strong&gt;Figure 12:&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eterrao/BlogExamples/master/Blogs/DifferenceOfYUV/fig1.gif&quot; alt=&quot;YV12 memory layout&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;NV12&quot;&gt;&lt;a href=&quot;#NV12&quot; class=&quot;headerlink&quot; title=&quot;NV12&quot;&gt;&lt;/a&gt;NV12&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;All of the Y samples are found first in memory as an array of unsigned char values with an even number of lines.&lt;/code&gt; The Y plane is followed immediately by an array of unsigned char values that contains packed U (Cb) and V (Cr) samples, as shown in Figure 13. When the combined U-V array is addressed as an array of little-endian WORD values, the LSBs contain the U values, and the MSBs contain the V values. NV12 is the preferred 4:2:0 pixel format for DirectX VA. It is expected to be an intermediate-term requirement for DirectX VA accelerators supporting 4:2:0 video.&lt;br&gt;&lt;strong&gt;Figure 13:&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eterrao/BlogExamples/master/Blogs/DifferenceOfYUV/fig2.gif&quot; alt=&quot;NV12 memory layout&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　从上可知YV12和NV12所占内存是&lt;strong&gt;12bits/Pixel&lt;/strong&gt;，因为&lt;strong&gt;每个Y就是一个像素点&lt;/strong&gt;，注意着色加粗的叙述，YUV值在内存中是按照数组的形式存放的，而由于&lt;strong&gt;YV12和NV21都是属于planar&lt;/strong&gt;格式，也就是Y值和UV值是独立采样的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;In a planar format, the Y, U, and V components are stored as three separate planes.&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　既然Y、U、V值都是独立的，那就意味着我们可以分别处理相应的值，比如在YV12中，排列方式是这样的，&lt;strong&gt;每4个Y共用一对UV值&lt;/strong&gt;，而U、V值又是按照如下格式排列&lt;br&gt;&lt;strong&gt;下面是YV12格式中宽为16，高为4像素的排列&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Y第一行:&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y第二行：&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y第三行：&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y第四行：&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V第一行：&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U第一行：&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V第二行：&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V5&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V6&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U第二行：&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U5&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U6&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U7&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;　　既然知道了YUV值的结构，我们就可以任性的对此图像做Rotate，scale等等。这里我以480ｘ270 （16:9)的一张原始帧图像举例，贴出部分代码示例：&lt;br&gt;任意设定的一个带有onPreviewFrame的类，&lt;strong&gt;CameraPreviewFrame.java:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 获取preview的原始帧：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 这里有个前提，因为Android camera preview默认格式为NV21的，所以需要&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 调用setPreviewFormat()方法设置为我们需要的格式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onPreviewFrame&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] data, Camera camera)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;span class=&quot;comment&quot;&gt;// 假设这里的data为480x270原始帧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String SRC_FRAME_WIDTH = &lt;span class=&quot;number&quot;&gt;480&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String SRC_FRAME_HEIGHT = &lt;span class=&quot;number&quot;&gt;270&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String DES_FRAME_WIDTH = &lt;span class=&quot;number&quot;&gt;480&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String DES_FRAME_HEIGHT = &lt;span class=&quot;number&quot;&gt;270&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 此处将data数组保存在了指定的路径，保存类型为jpeg格式，但是普通的图片浏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 览器是无法打开的，需要使用RawView等专业的工具打开。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        saveImageData(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 定义与原始帧大小一样的outputData，因为YUV420所占内存是12Bits/Pixel，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;// 每个Y为一个像素8bit＝1Byte，U＝2bit＝1/4(Byte)，V＝2bit=1/4(Byte)，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;// Y值数量为480*270，则U=V＝480*270*(1/4)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] outputData = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[DES_FRAME_WIDTH * DES_FRAME_HEIGHT * &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// call the JNI method to rotate frame data clockwise 90 degrees&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        YuvUtil.DealYV12(data, outputData, SRC_FRAME_WIDTH, SRC_FRAME_HEIGHT, &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        saveImageData(outputData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// save image to sdcard path: Pictures/MyTestImage/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;saveImageData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] imageData)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        File imageFile = getOutputMediaFile(MEDIA_TYPE_IMAGE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (imageFile == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            FileOutputStream fos = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileOutputStream(imageFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fos.write(imageData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fos.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (FileNotFoundException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Log.e(TAG, &lt;span class=&quot;string&quot;&gt;&quot;File not found: &quot;&lt;/span&gt; + e.getMessage());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Log.e(TAG, &lt;span class=&quot;string&quot;&gt;&quot;Error accessing file: &quot;&lt;/span&gt; + e.getMessage());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; File &lt;span class=&quot;title&quot;&gt;getOutputMediaFile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; type)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        File imageFileDir = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES), &lt;span class=&quot;string&quot;&gt;&quot;MyTestImage&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!imageFileDir.exists()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!imageFileDir.mkdirs()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Log.e(TAG, &lt;span class=&quot;string&quot;&gt;&quot;can&#39;t makedir for imagefile&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Create a media file name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String timeStamp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SimpleDateFormat(&lt;span class=&quot;string&quot;&gt;&quot;yyyyMMdd_HHmmss&quot;&lt;/span&gt;).format(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Date());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        File imageFile;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type == MEDIA_TYPE_IMAGE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            imageFile = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(imageFileDir.getPath() + File.separator +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&quot;IMG_&quot;&lt;/span&gt; + timeStamp + &lt;span class=&quot;string&quot;&gt;&quot;.jpg&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type == MEDIA_TYPE_VIDEO) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            imageFile = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(imageFileDir.getPath() + File.separator +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&quot;VID_&quot;&lt;/span&gt; + timeStamp + &lt;span class=&quot;string&quot;&gt;&quot;.mp4&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; imageFile;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的代码中可以看到调用了JNI的方法：&lt;strong&gt;YuvUtil.RotateYV12()&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;YuvUtil&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 初始化，为data分配相应大小的内存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initYV12&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; scale_length)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DealYV12&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] src_data, &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] dst_data, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; width, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; height, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; rotation)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;com_example_jni_YuvUtil.h&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* DO NOT EDIT THIS FILE - it is machine generated */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;jni.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* Header for class _Included_com_example_jni_YuvUtil */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifndef&lt;/span&gt; _Included_com_example_jni_YuvUtil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; _Included_com_example_jni_YuvUtil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Class:     com_example_jni_YuvUtil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Method:    initYV12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Signature: (II)V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;JNIEXPORT &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jni_YuvUtil_initYV12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;params&quot;&gt;(JNIEnv *, jclass, jint, jint)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Class:     com_example_jni_YuvUtil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Method:    DealYV12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Signature: ([B[BIIIII)V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;JNIEXPORT &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jni_YuvUtil_DealYV12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;params&quot;&gt;(JNIEnv *, jclass, jbyteArray, jbyteArray, jint, jint, jint, jint, jint)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**com_example_jni_YuvUtil.c**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;com_example_jni_YuvUtil.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;android/log.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;jni.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; TAG &lt;span class=&quot;string&quot;&gt;&quot;jni-log-jni&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 这个是自定义的LOG的标识&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LOGD(...) __android_log_print(ANDROID_LOG_DEBUG,TAG ,__VA_ARGS__) &lt;span class=&quot;comment&quot;&gt;// 定义LOGD类型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LOGI(...) __android_log_print(ANDROID_LOG_INFO,TAG ,__VA_ARGS__) &lt;span class=&quot;comment&quot;&gt;// 定义LOGI类型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LOGW(...) __android_log_print(ANDROID_LOG_WARN,TAG ,__VA_ARGS__) &lt;span class=&quot;comment&quot;&gt;// 定义LOGW类型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LOGE(...) __android_log_print(ANDROID_LOG_ERROR,TAG ,__VA_ARGS__) &lt;span class=&quot;comment&quot;&gt;// 定义LOGE类型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LOGF(...) __android_log_print(ANDROID_LOG_FATAL,TAG ,__VA_ARGS__) &lt;span class=&quot;comment&quot;&gt;// 定义LOGF类型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *input_src_data, *output_src_data, *src_y_data,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *src_u_data, *src_v_data, *dst_y_data, *dst_v_data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; src_data_width, src_data_height, len_src;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Class:     com_example_jni_YuvUtil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;JNIEXPORT &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jni_YuvUtil_initYV12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jclass jcls, jint length, jint scaleDataLength)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    len_src = length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    len_scale = scaleDataLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LOGD(&lt;span class=&quot;string&quot;&gt;&quot;########## len_src  = %d, len_scale = %d \n&quot;&lt;/span&gt;, len_src, len_scale);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    input_src_data = &lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(sizeof(char) * len_src);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LOGD(&lt;span class=&quot;string&quot;&gt;&quot;########## input_src_data  = %d \n&quot;&lt;/span&gt;, input_src_data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    src_y_data = &lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(sizeof(char) * (len_src * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    src_u_data = &lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(sizeof(char) * (len_src / &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    src_v_data = &lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(sizeof(char) * (len_src / &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dst_y_data = &lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(sizeof(char) * (len_src * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dst_u_data = &lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(sizeof(char) * (len_src / &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dst_v_data = &lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(sizeof(char) * (len_src / &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;JNIEXPORT &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jni_YuvUtil_DealYV12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jclass jcls, jbyteArray src_data,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jbyteArray dst_data, jint width, jint height, jint rotation, jint dst_width, jint dst_height)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    src_data_width = width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    src_data_height = height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 将src_data的数据传给input_src_data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*env)-&amp;gt;GetByteArrayRegion (env, src_data, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len_src, (jbyte*)(input_src_data));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*以下三个memcpy分别将Y、U、V值从src_data中提取出来,将YUV值分别scale或者rotate，则可得到对应格式的图像数据*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// get y plane&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;memcpy&lt;/span&gt;(src_y_data, input_src_data , (len_src * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; /&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// get u plane&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;memcpy&lt;/span&gt;(src_u_data, input_src_data + (len_src * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;), len_src / &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// get v plane&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;memcpy&lt;/span&gt;(src_v_data, input_src_data + (len_src * &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; ), len_src / &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*获取yuv三个值的数据可以做相应操作*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ......... &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// .........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 例：将Y值置为0，则得到没有灰度的图像；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;memset&lt;/span&gt;(input_src_data + src_data_width * src_data_height, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, src_data_width * src_data_height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 将input_src_data的数据返回给dst_data输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// output to the dst_data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*env)-&amp;gt;SetByteArrayRegion (env, dst_data, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len_src, (jbyte*)(input_src_data));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * free memory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;JNIEXPORT &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jni_YuvUtil_ReleaseYV12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;(JNIEnv *env , jclass jcls)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;free&lt;/span&gt;(output_src_data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;free&lt;/span&gt;(input_src_data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：以上代码不是完全的，只是用于说明而已，如果需要更多的操作还请各位朋友自己完善，因为没怎么写过这类博客代码很乱，如有表述的不清楚和有问题的地方，大家可以给我留言。&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h5&gt;&lt;p&gt;　　因工作方面接触到图像处理这一块，需要对手机摄像头采集的原始帧做Rotate或者Scale，但无奈对此的了解少之又少，于是网上搜了一顿，完事后将最近所学总结一下，以方便之后的人别踩太多坑。  &lt;/p&gt;
&lt;p&gt;　　首先想要了解YUV为何物:&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/aa904813&quot;&gt;请猛戳我&lt;/a&gt;　　&lt;/p&gt;
&lt;p&gt;　　上面的链接中微软已经写的很详细了，国内大部分文章都是翻译这篇文章的，如果还有疑问的同学可以参考下面这些大神的博客：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/leixiaohua1020/article/details/42134965&quot;&gt;最简单的基于FFmpeg的libswscale的示例（YUV转RGB）&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/azraelly/archive/2013/01/01/2841269.htm&quot;&gt;图文详解YUV420数据格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tangzm.com/blog/?p=18&quot;&gt;ANDROID 高性能图形处理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/yanzi1225627/article/details/8626411&quot;&gt;Android摄像头开发：实时摄像头视频预览帧的编码问题（二）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Android" scheme="http://www.shutu.tech/categories/Android/"/>
    
    
      <category term="Android" scheme="http://www.shutu.tech/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android动画浅析+模仿</title>
    <link href="http://www.shutu.tech/2016/05/20/AnimationExamples/"/>
    <id>http://www.shutu.tech/2016/05/20/AnimationExamples/</id>
    <published>2016-05-19T16:19:54.000Z</published>
    <updated>2016-06-27T16:13:42.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;Android动画浅析+模仿
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;ObjectAnimator&quot;&gt;&lt;a href=&quot;#ObjectAnimator&quot; class=&quot;headerlink&quot; title=&quot;ObjectAnimator:&quot;&gt;&lt;/a&gt;ObjectAnimator:&lt;/h4&gt;&lt;p&gt;属性动画（ObjectAnimator）的概念这里就不解释了，直接从代码中说明，以下是模仿Persicope的加载动画，简单的几行代码即可实现，当然我也是模仿的，更好的实现思路还请各位朋友自己仔细思考。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;先说说我的思路：&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;首先下载Periscope然后改名zip解包，获取对应的png图片（搜索相关的loading文件：ps__bg_loading.png），看到了该文件的大小，仔细观察后，发现可以把很多张图连在一起从右–&amp;gt;左的连续位移动画，而这里我用到了属性动画，当然不是最好的选择，而且我这里实现的方法很笨，就是将两个LinearLayout不同x的坐标轴同样的距离和时间进行右到左的translate。实现结果如下图：&lt;/p&gt;
&lt;h4 id=&quot;Demo-演示&quot;&gt;&lt;a href=&quot;#Demo-演示&quot; class=&quot;headerlink&quot; title=&quot;Demo 演示:&quot;&gt;&lt;/a&gt;Demo 演示:&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eterrao/AnimationExamples/master/periscopeLoading.gif&quot; alt=&quot;Loading&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Demo地址：&lt;/strong&gt; &lt;a href=&quot;https://github.com/eterrao/AnimationExamples&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/eterrao/AnimationExamples&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;Android动画浅析+模仿
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;ObjectAnimator&quot;&gt;&lt;a href=&quot;#
    
    </summary>
    
      <category term="Android" scheme="http://www.shutu.tech/categories/Android/"/>
    
    
      <category term="Android" scheme="http://www.shutu.tech/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android-Classical-OpenSource</title>
    <link href="http://www.shutu.tech/2016/05/09/Android-Classical-OpenSource/"/>
    <id>http://www.shutu.tech/2016/05/09/Android-Classical-OpenSource/</id>
    <published>2016-05-09T05:02:52.000Z</published>
    <updated>2016-07-30T06:35:31.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Android-Classical-OpenSource&quot;&gt;&lt;a href=&quot;#Android-Classical-OpenSource&quot; class=&quot;headerlink&quot; title=&quot;Android-Classical-OpenSource&quot;&gt;&lt;/a&gt;Android-Classical-OpenSource&lt;/h1&gt;&lt;p&gt;Android开发中 个人遇到和使用过的值得分享的资源合集&lt;/p&gt;
&lt;h2 id=&quot;Trinea的OpenProject&quot;&gt;&lt;a href=&quot;#Trinea的OpenProject&quot; class=&quot;headerlink&quot; title=&quot;Trinea的OpenProject&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/Trinea/android-open-project&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Trinea的OpenProject&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;强烈推荐的Android 开源项目分类汇总，star数量1.7W+&lt;/p&gt;
&lt;h4 id=&quot;项目说明：&quot;&gt;&lt;a href=&quot;#项目说明：&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Android 开源项目第一篇——个性化控件(View)篇&lt;br&gt;  包括ListView、ActionBar、Menu、ViewPager、Gallery、GridView、ImageView、ProgressBar、TextView、ScrollView、TimeView、TipView、FlipView、ColorPickView、GraphView、UI Style、其他&lt;br&gt;Android 开源项目第二篇——工具库篇&lt;br&gt;  包括依赖注入、图片缓存、网络请求、数据库 ORM 工具包、Android 公共库、高版本向低版本兼容库、多媒体、事件总线、传感器、安全、插件化、文件、其他&lt;br&gt;Android 开源项目第三篇——优秀项目篇&lt;br&gt;  比较有意思的完整的 Android 项目&lt;br&gt;Android 开源项目第四篇——开发及测试工具篇&lt;br&gt;  包括开发效率工具、开发自测相关、测试工具、开发及编译环境、其他&lt;br&gt;Android 开源项目第五篇——优秀个人和团体篇&lt;br&gt;  乐于分享并且有一些很不错的开源项目的个人和组织，包括 JakeWharton、Chris Banes、Koushik Dutta 等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;awesome-android-ui&quot;&gt;&lt;a href=&quot;#awesome-android-ui&quot; class=&quot;headerlink&quot; title=&quot;awesome-android-ui&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/wasabeef/awesome-android-ui&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;awesome-android-ui&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;项目说明：-1&quot;&gt;&lt;a href=&quot;#项目说明：-1&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;p&gt;国外wasabeef大神分享的一个库，同上面Trinea开源的共享库。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A curated list of awesome Android UI/UX libraries.                       &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;AndroidDevTools-开源项目分类汇总&quot;&gt;&lt;a href=&quot;#AndroidDevTools-开源项目分类汇总&quot; class=&quot;headerlink&quot; title=&quot;AndroidDevTools 开源项目分类汇总&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/inferjay/AndroidDevTools&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AndroidDevTools 开源项目分类汇总&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;官方网站&quot;&gt;&lt;a href=&quot;#官方网站&quot; class=&quot;headerlink&quot; title=&quot;官方网站&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.androiddevtools.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方网站&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=&quot;项目说明：-2&quot;&gt;&lt;a href=&quot;#项目说明：-2&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;收集整理Android开发所需的Android SDK、开发中用到的工具、Android开发教程、Android设计规范，免费的设计素材等。&lt;br&gt;欢迎大家推荐自己在Android开发过程中用的好用的工具、学习开发教程、用到设计素材，欢迎Star、Fork 😄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;android-tech-frontier&quot;&gt;&lt;a href=&quot;#android-tech-frontier&quot; class=&quot;headerlink&quot; title=&quot;android-tech-frontier&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/eterrao/android-tech-frontier.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;android-tech-frontier&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;项目说明：-3&quot;&gt;&lt;a href=&quot;#项目说明：-3&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;一个定期翻译、发布国内外Android优质的技术、开源库、软件架构设计、测试等文章的开源项目,让我们的技术跟上国际步伐。&lt;/p&gt;
&lt;p&gt;我们翻译的文章在能够联系到作者的情况下都会在获得作者授权后进行翻译，并且公开发布。发布的文章中都会保留原文链接、作者名，如有相关的版权协议我们也会一并附上。目前已经联系到的作者列表请参考授权文档;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h3 id=&quot;List-of-Free-Learning-Resources&quot;&gt;&lt;a href=&quot;#List-of-Free-Learning-Resources&quot; class=&quot;headerlink&quot; title=&quot;List of Free Learning Resources&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/vhf/free-programming-books&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;List of Free Learning Resources&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;超神的资源网站，各种国家的编程资料、电子书和博客，应有尽有。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;##个人博客资源：&lt;/p&gt;
&lt;h3 id=&quot;stormZhang&quot;&gt;&lt;a href=&quot;#stormZhang&quot; class=&quot;headerlink&quot; title=&quot;stormZhang&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://stormzhang.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stormZhang&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;每个人都有一段艰辛、苦逼的成长时光，所以学会从博客开始记录自己一点一滴。这个博客的文章每次看都让自己有更多的动力去学习。提醒自己别忘了还有梦想。&lt;br&gt;PS：&lt;code&gt;还有很多干货&lt;/code&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;###&lt;a href=&quot;http://ticktick.blog.51cto.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tickTick 的BLOG&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本目录下的代码都是来自于我的博客《Android应用开发》系列文章，本系列文章介绍Android开发的一些基础和进阶知识，并附带有一些简单的Demo示例，这些示例代码中很多Java文件都对Android API进行了良好的封装，可以直接拿到自己的项目中使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Code List&lt;/strong&gt;&lt;br&gt;Builder 给出了使用ant编译Android工程的通用shell脚本，相关博文：Android开发实践：用脚本编译Android工程&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GroupList&lt;/strong&gt;&lt;br&gt;封装并演示了如何使用Android的ExpandableListView控件，相关博文：Android开发实践：多级列表的封装与应用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PopDialog&lt;/strong&gt;&lt;br&gt;封装并演示了如何使用Android的PopupWindow控件，相关博文：Android开发实践：用PopupWindow实现自定义Dailog&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JniCallback&lt;/strong&gt;&lt;br&gt;演示了如何从Native线程回调Java的函数，相关博文：Android开发实践：JNI层线程回调Java函数示例&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JniBuffer&lt;/strong&gt;&lt;br&gt;演示了各种从Java端到Native层的Buffer传递方法，相关博文：Android开发实践：Java层与Jni层的数组传递&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LoopThread&lt;/strong&gt;&lt;br&gt;演示了如何实现一个自定义的带Loop消息循环的线程，相关博文：Android开发实践：自定义带消息循环（Looper）的工作线程&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;VideoPlayer&lt;/strong&gt;&lt;br&gt;演示了Android隐式Intent的用法，相关博文：Android开发实践：实战演练隐式Intent的用法&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;VideoServer&lt;/strong&gt;&lt;br&gt;演示了如何利用NanoHttpd搭建一个Android视频服务器，相关博文：基于NanoHttpd的Android视频服务器开发&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CustomView&lt;/strong&gt;&lt;br&gt;演示了如何自定义View和ViewGroup，并给出了一个柱状图动画自定义View的实现，相关博文：&lt;/p&gt;
&lt;p&gt;（1）Android开发实践：为什么要继承onMeasure()&lt;/p&gt;
&lt;p&gt;（2）Android开发实践：自定义ViewGroup的onLayout()分析&lt;/p&gt;
&lt;p&gt;（3）Android开发实践：自定义带动画的View&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WIFI&lt;/strong&gt; 封装了Andriod WIFI扫描和连接的相关API，相关博文：&lt;/p&gt;
&lt;p&gt;（1）Android开发实践：WIFI扫描功能的封装&lt;/p&gt;
&lt;p&gt;（2）Android开发实践：WIFI连接功能的封装&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Socket&lt;/strong&gt;封装了Android中的Socket相关API&lt;/p&gt;
&lt;p&gt;（1） Broadcaster.java 封装了UDP广播包的收发操作，相关博文：Android Socket 发送广播包的那些坑&lt;/p&gt;
&lt;p&gt;MediaDemo 给出了Android平台下多媒体相关API的demo代码，相关博文：Android中如何提取和生成mp4文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Utils&lt;/strong&gt; 给出了一系列的工具类代码&lt;/p&gt;
&lt;p&gt;（1）SignatureGen.java 一个可以生成Java函数签名字符串的工具类，相关博文: Android开发实践：JNI函数签名生成器&lt;/p&gt;
&lt;p&gt;（2）BitmapHelper.java 一个封装了Bitmap操作的工具类，包括图片的打开、保存、剪裁、旋转等操作，相关博文: Android开发实践：自己动手编写图片剪裁应用（3）&lt;/p&gt;
&lt;p&gt;（3）ImageConvertor.java 封装了Android中各种图像格式转换，包括：NV21，YUY2、RGB565、ARGB8888、PNG、JPEG、Bitmap之间的转换操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;工具类：&quot;&gt;&lt;a href=&quot;#工具类：&quot; class=&quot;headerlink&quot; title=&quot;工具类：&quot;&gt;&lt;/a&gt;工具类：&lt;/h2&gt;&lt;h3 id=&quot;通用&quot;&gt;&lt;a href=&quot;#通用&quot; class=&quot;headerlink&quot; title=&quot;通用&quot;&gt;&lt;/a&gt;通用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;关于APK瘦身值得分享的一些经验：&lt;a href=&quot;http://www.jianshu.com/p/bd90dee57ad0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/bd90dee57ad0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PNG压缩：&lt;a href=&quot;https://tinypng.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://tinypng.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&quot;MarkDown编辑器&quot;&gt;&lt;a href=&quot;#MarkDown编辑器&quot; class=&quot;headerlink&quot; title=&quot;MarkDown编辑器&quot;&gt;&lt;/a&gt;MarkDown编辑器&lt;/h3&gt;&lt;h4 id=&quot;Typora&quot;&gt;&lt;a href=&quot;#Typora&quot; class=&quot;headerlink&quot; title=&quot;Typora&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.typora.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Typora&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;正在使用，简单方便。&lt;strong&gt;强烈推荐！&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：&lt;ul&gt;
&lt;li&gt;实时预览&lt;/li&gt;
&lt;li&gt;支持常用的几种主题（GitHub、Night等等）&lt;/li&gt;
&lt;li&gt;快捷键插入十分方便&lt;/li&gt;
&lt;li&gt;支持代码的高亮及多种语言的高亮选择&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;: 由于是国外网站，所以下载比较慢，耐心等待&lt;/p&gt;
&lt;h4 id=&quot;Mou&quot;&gt;&lt;a href=&quot;#Mou&quot; class=&quot;headerlink&quot; title=&quot;Mou&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://25.io/mou/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mou&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;该有的都有了，羞耻的使用了破解版，但是个人唯一受不了的是这货居然不支持多窗口！！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：左边编辑右边实时预览；&lt;/li&gt;
&lt;li&gt;缺点：&lt;ul&gt;
&lt;li&gt;不支持多窗口，不知道能不能设置；&lt;/li&gt;
&lt;li&gt;收费软件；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Cmd-Markdown编辑器&quot;&gt;&lt;a href=&quot;#Cmd-Markdown编辑器&quot; class=&quot;headerlink&quot; title=&quot;Cmd Markdown编辑器&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.zybuluo.com/mdeditor#403095&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cmd Markdown编辑器&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;一款&lt;strong&gt;在线&lt;/strong&gt;编辑的MarkDown编辑器，设计简洁。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：&lt;ul&gt;
&lt;li&gt;浏览器在线编辑，可以实时同步到不同的设备&lt;/li&gt;
&lt;li&gt;支持导出的格式挺多&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺点：&lt;ul&gt;
&lt;li&gt;需要注册登录账号&lt;/li&gt;
&lt;li&gt;没有网貌似没法用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;StackEdit&quot;&gt;&lt;a href=&quot;#StackEdit&quot; class=&quot;headerlink&quot; title=&quot;StackEdit&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://stackedit.io/editor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StackEdit&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;同样是&lt;strong&gt;在线&lt;/strong&gt;编辑器，国外的&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;真机调试&quot;&gt;&lt;a href=&quot;#真机调试&quot; class=&quot;headerlink&quot; title=&quot;真机调试&quot;&gt;&lt;/a&gt;真机调试&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.testin.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;云测 (Testin)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://utest.qq.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;优测 (腾讯的)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;数据统计-Bug-Crash-Reporter&quot;&gt;&lt;a href=&quot;#数据统计-Bug-Crash-Reporter&quot; class=&quot;headerlink&quot; title=&quot;数据统计 / Bug / Crash Reporter&quot;&gt;&lt;/a&gt;数据统计 / Bug / Crash Reporter&lt;/h3&gt;&lt;h4 id=&quot;国内&quot;&gt;&lt;a href=&quot;#国内&quot; class=&quot;headerlink&quot; title=&quot;国内&quot;&gt;&lt;/a&gt;&lt;strong&gt;国内&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.umeng.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;友盟&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;友盟的功能集成挺多，常用的基本都覆盖了，社会化组件/数据统计/Bug分析基本都通用，并且使用起来比较直观。SDK使用的话也不算麻烦。&lt;br&gt;优点就不说了，说说缺点吧，就是Crash Report不能实时邮件反馈，第二天9点30左右才会收到前一天的统计概况。详情的话倒是可以实时查询。&lt;/p&gt;
&lt;h4 id=&quot;国外&quot;&gt;&lt;a href=&quot;#国外&quot; class=&quot;headerlink&quot; title=&quot;国外&quot;&gt;&lt;/a&gt;国外&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://fabric.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fabric&lt;/a&gt; (Twitter出的)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：反馈及时，一般有了Bug邮件没过多久就收到了，并且集成起来很方便，基于Android Studio的一个插件自动将SDK打入项目中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：如果平时Debug频率高的话建议关闭，每次切换分之如果有什么意外总会重新拉取最新的版本，一等就是十几分钟，等待真正公测的时候再打开，这样信息比较准确，还有建议测试的时候打包使用Debug版本号，能够在日志清楚的区分线上线下版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;面试相关&quot;&gt;&lt;a href=&quot;#面试相关&quot; class=&quot;headerlink&quot; title=&quot;面试相关&quot;&gt;&lt;/a&gt;面试相关&lt;/h2&gt;&lt;p&gt;面试，面试，面试！重要的事情说三遍！&lt;/p&gt;
&lt;h3 id=&quot;AndroidInterview-Q-A&quot;&gt;&lt;a href=&quot;#AndroidInterview-Q-A&quot; class=&quot;headerlink&quot; title=&quot;AndroidInterview-Q-A&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/JackyAndroid/AndroidInterview-Q-A&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AndroidInterview-Q-A&lt;/a&gt;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;以下面试题来自于百度、小米、乐视、美团、58、猎豹、360、新浪、搜狐内部题库&lt;/p&gt;
&lt;p&gt;熟悉本文中列出的知识点会大大增加通过前两轮技术面试的几率。&lt;/p&gt;
&lt;h3 id=&quot;一、Java基础&quot;&gt;&lt;a href=&quot;#一、Java基础&quot; class=&quot;headerlink&quot; title=&quot;一、Java基础&quot;&gt;&lt;/a&gt;一、Java基础&lt;/h3&gt;&lt;h3 id=&quot;二、Android基础&quot;&gt;&lt;a href=&quot;#二、Android基础&quot; class=&quot;headerlink&quot; title=&quot;二、Android基础&quot;&gt;&lt;/a&gt;二、Android基础&lt;/h3&gt;&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;LearningNotes&quot;&gt;&lt;a href=&quot;#LearningNotes&quot; class=&quot;headerlink&quot; title=&quot;LearningNotes&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/GeniusVJR/LearningNotes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LearningNotes&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;内容涵盖了Android各大知识点，不必要都看别人总结的，可以自己试着总结这样学习更快，但可以根据别人列出的知识点查缺补漏。博主第六部分的&lt;strong&gt;面试经验&lt;/strong&gt;值得借鉴&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Android-Classical-OpenSource&quot;&gt;&lt;a href=&quot;#Android-Classical-OpenSource&quot; class=&quot;headerlink&quot; title=&quot;Android-Classical-OpenSource&quot;&gt;&lt;/a&gt;Android-Classical-OpenSource&lt;/h1&gt;&lt;p&gt;Android开发中 个人遇到和使用过的值得分享的资源合集&lt;/p&gt;
&lt;h2 id=&quot;Trinea的OpenProject&quot;&gt;&lt;a href=&quot;#Trinea的OpenProject&quot; class=&quot;headerlink&quot; title=&quot;Trinea的OpenProject&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/Trinea/android-open-project&quot;&gt;Trinea的OpenProject&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;强烈推荐的Android 开源项目分类汇总，star数量1.7W+&lt;/p&gt;
&lt;h4 id=&quot;项目说明：&quot;&gt;&lt;a href=&quot;#项目说明：&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Android 开源项目第一篇——个性化控件(View)篇&lt;br&gt;  包括ListView、ActionBar、Menu、ViewPager、Gallery、GridView、ImageView、ProgressBar、TextView、ScrollView、TimeView、TipView、FlipView、ColorPickView、GraphView、UI Style、其他&lt;br&gt;Android 开源项目第二篇——工具库篇&lt;br&gt;  包括依赖注入、图片缓存、网络请求、数据库 ORM 工具包、Android 公共库、高版本向低版本兼容库、多媒体、事件总线、传感器、安全、插件化、文件、其他&lt;br&gt;Android 开源项目第三篇——优秀项目篇&lt;br&gt;  比较有意思的完整的 Android 项目&lt;br&gt;Android 开源项目第四篇——开发及测试工具篇&lt;br&gt;  包括开发效率工具、开发自测相关、测试工具、开发及编译环境、其他&lt;br&gt;Android 开源项目第五篇——优秀个人和团体篇&lt;br&gt;  乐于分享并且有一些很不错的开源项目的个人和组织，包括 JakeWharton、Chris Banes、Koushik Dutta 等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;awesome-android-ui&quot;&gt;&lt;a href=&quot;#awesome-android-ui&quot; class=&quot;headerlink&quot; title=&quot;awesome-android-ui&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/wasabeef/awesome-android-ui&quot;&gt;awesome-android-ui&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;项目说明：-1&quot;&gt;&lt;a href=&quot;#项目说明：-1&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;p&gt;国外wasabeef大神分享的一个库，同上面Trinea开源的共享库。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A curated list of awesome Android UI/UX libraries.                       &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;AndroidDevTools-开源项目分类汇总&quot;&gt;&lt;a href=&quot;#AndroidDevTools-开源项目分类汇总&quot; class=&quot;headerlink&quot; title=&quot;AndroidDevTools 开源项目分类汇总&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/inferjay/AndroidDevTools&quot;&gt;AndroidDevTools 开源项目分类汇总&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;官方网站&quot;&gt;&lt;a href=&quot;#官方网站&quot; class=&quot;headerlink&quot; title=&quot;官方网站&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.androiddevtools.cn/&quot;&gt;官方网站&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=&quot;项目说明：-2&quot;&gt;&lt;a href=&quot;#项目说明：-2&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;收集整理Android开发所需的Android SDK、开发中用到的工具、Android开发教程、Android设计规范，免费的设计素材等。&lt;br&gt;欢迎大家推荐自己在Android开发过程中用的好用的工具、学习开发教程、用到设计素材，欢迎Star、Fork 😄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&quot;android-tech-frontier&quot;&gt;&lt;a href=&quot;#android-tech-frontier&quot; class=&quot;headerlink&quot; title=&quot;android-tech-frontier&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/eterrao/android-tech-frontier.git&quot;&gt;android-tech-frontier&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;项目说明：-3&quot;&gt;&lt;a href=&quot;#项目说明：-3&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;一个定期翻译、发布国内外Android优质的技术、开源库、软件架构设计、测试等文章的开源项目,让我们的技术跟上国际步伐。&lt;/p&gt;
&lt;p&gt;我们翻译的文章在能够联系到作者的情况下都会在获得作者授权后进行翻译，并且公开发布。发布的文章中都会保留原文链接、作者名，如有相关的版权协议我们也会一并附上。目前已经联系到的作者列表请参考授权文档;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android" scheme="http://www.shutu.tech/categories/Android/"/>
    
    
      <category term="Android" scheme="http://www.shutu.tech/tags/Android/"/>
    
  </entry>
  
</feed>
