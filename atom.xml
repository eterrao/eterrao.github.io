<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>书途</title>
  <subtitle>人无书而涂，因书而智，终老以书为伴，是为书途</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.shutu.tech/"/>
  <updated>2016-10-04T06:03:56.000Z</updated>
  <id>http://www.shutu.tech/</id>
  
  <author>
    <name>Codios</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>面试经验--乐视</title>
    <link href="http://www.shutu.tech/2016/10/04/%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C-%E4%B9%90%E8%A7%86/"/>
    <id>http://www.shutu.tech/2016/10/04/面试经验-乐视/</id>
    <published>2016-10-04T06:03:56.000Z</published>
    <updated>2016-10-04T06:03:56.000Z</updated>
    
    <content type="html">&lt;p&gt;此次投的是三年经验的Android开发，最后反而因为自己的失误，没有准备充分而导致结果很悲剧，以此告诫自己千万不能疏忽大意。&lt;/p&gt;
&lt;h2 id=&quot;面试过程&quot;&gt;&lt;a href=&quot;#面试过程&quot; class=&quot;headerlink&quot; title=&quot;面试过程&quot;&gt;&lt;/a&gt;面试过程&lt;/h2&gt;&lt;p&gt;第一次去大公司面试，心里不是一般的激动和紧张，来到乐视大厦门口，感觉这一切都不像是真实的，这才是北漂的我现在想去的地方。向一楼客服MM询问了下要了临时工卡直接上了10F，电梯有点挤。找到HR后她帮我联系了面试官。（PS: 网友说挤，现在看到真实环境还真不是盖的，HR都是挨着坐，研发这边都是各种大电视并排的，但是这种环境工作也正是我所期待的）&lt;/p&gt;
&lt;p&gt;面试官貌似很严肃的样子，让我更多了几分不自然。在工位上直接开始给我一套题先做，题数不多只有5题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;实现单例模式；&lt;/li&gt;
&lt;li&gt;循环和递归实现N阶阶乘 （0 != 1），输入目标值可以输出结果；&lt;/li&gt;
&lt;li&gt;二分法查找目标值；&lt;/li&gt;
&lt;li&gt;两个栈实现队列，栈的基本方法给出：pop()，push()，isEmpty()；&lt;/li&gt;
&lt;li&gt;100层跳台阶，一次可以跳123步，总共跳多少步；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;由于快到中午开始的，写完正好面试官买饭去了，回来端着饭问我是否写完了，结果看了看答卷瞬间黑脸直接说，你这写的答案感觉不像工作三年的啊，我老实实话实说去年2月才开始自学的编程，9月正式工作的，现在工作一年多了，因为怕简历被刷才写的三年。于是开始问我的答卷，就不一一细说了，想找个缝钻进去。。&lt;/p&gt;
&lt;p&gt;数据结构与算法被完爆后，又问了问关于Android方面的知识点，其实这些问题基本都是聊工作接触到的东西，然后面试官试探你入的有多深&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Volley有哪些类型的网络请求；&lt;/li&gt;
&lt;li&gt;Volley的RetryPolicy方法，其中问到了设置超时时间，原理等&lt;/li&gt;
&lt;li&gt;Get / Post的请求方式，两者的区别&lt;/li&gt;
&lt;li&gt;Android Studio查看线程状态的方法&lt;/li&gt;
&lt;li&gt;线程有哪些状态&lt;/li&gt;
&lt;li&gt;如何分析Debug ANR的问题&lt;/li&gt;
&lt;li&gt;从traces.txt文件中怎么分析ANR&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;记得的也就大概是上面这些问题，但是一般面试官问的时候都是看你的简历问的问题，看看你的简历写的是否真实，千万不要把不会的写的熟练，不然自己打脸。&lt;/p&gt;
&lt;p&gt;此次面试最大的感触，是后面面试官问我的优势在哪，我说我很拼，可被痛骂一顿，说没看到我拼的结果，并且我只有输入没有输出，这样是不行的。因为不是科班生的缘故，他建议我把相关的教材找找，把基础好好看看，前人几十年的知识积累都记录在里面，不要忽略这些东西。&lt;/p&gt;
&lt;p&gt;虽然此次以GG告终，却改变了我曾经很多幼稚的想法。感谢生命中给予我帮助甚多的人们。&lt;/p&gt;
&lt;h2 id=&quot;最后总结了几点：&quot;&gt;&lt;a href=&quot;#最后总结了几点：&quot; class=&quot;headerlink&quot; title=&quot;最后总结了几点：&quot;&gt;&lt;/a&gt;最后总结了几点：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;无论是否正在工作还是要多去面试，毕竟能知道自己的不足，能尽快改进&lt;/li&gt;
&lt;li&gt;基础很重要！这决定了自己以后成长的深度，不要认为数据结构与算法貌似工作中都用不到&lt;/li&gt;
&lt;li&gt;面试前先练练手写代码，确保自己写的清晰、熟练，写的同时注意鲁棒问题，边界问题，答完题后将几个值带进去看看是否正确&lt;/li&gt;
&lt;li&gt;写博客，平时工作用到的都尽量记录下来，并且细心一些。这次被问到DDMS中查看线程状态时就有细节被问到而我一问三不知&lt;/li&gt;
&lt;li&gt;简历要真实，大部分面试的内容都是简历写的内容&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;此次投的是三年经验的Android开发，最后反而因为自己的失误，没有准备充分而导致结果很悲剧，以此告诫自己千万不能疏忽大意。&lt;/p&gt;
&lt;h2 id=&quot;面试过程&quot;&gt;&lt;a href=&quot;#面试过程&quot; class=&quot;headerlink&quot; title=&quot;面试过程&quot;&gt;&lt;/a&gt;面试过程
    
    </summary>
    
    
      <category term="面试" scheme="http://www.shutu.tech/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Android5.0以下NoClassDefFoundError的Bug</title>
    <link href="http://www.shutu.tech/2016/09/11/Android5-0%E4%BB%A5%E4%B8%8BNoClassDefFoundError%E7%9A%84Bug/"/>
    <id>http://www.shutu.tech/2016/09/11/Android5-0以下NoClassDefFoundError的Bug/</id>
    <published>2016-09-11T15:46:28.000Z</published>
    <updated>2016-09-11T16:19:58.000Z</updated>
    
    <content type="html">&lt;p&gt;大周末的，突然接到老大的电话说很多用户无法安装新上线的APK，让我紧急Fix（现Android项目就我一己之力）。但奇怪的是也没有Bug Reporter，而且开发过程中也一直没问题。根据上报的几个用户的机型，我初步推断都是5.0以下的设备无法启动App，通过云测和优测的真机模拟（在此强烈推荐这两个测试平台，前者是腾讯的，机型较新，后者做的规模还不错，测试较为准确，并且每天都有免费兼容测试的资格和限时免费的机型）打印出Log后得出判断，错误异常居然是这个：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java.lang.NoClassDefFoundError&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这可就折腾了，因为Log打印的是某个类没有找到，开始以为是该类的代码问题，仔细检查后发现根本不应该是这个类引发的问题。而分别打的两个正式包（Mac和PC环境）设备报错都不是同一个类，刚开始Google的时候，关键字是&lt;code&gt;NoClassDefFoundError android&lt;/code&gt;，SF上网友遇到的是Eclipse的路径配置问题，和我遇到的不是同一个Bug，就在希望快崩溃的时候，再次Google&lt;code&gt;NoClassDefFoundError android studio&lt;/code&gt;发现&lt;a href=&quot;http://stackoverflow.com/questions/27698287/noclassdeffounderror-with-android-studio-on-android-4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;该问题描述&lt;/a&gt;和我遇到的一模一样，回想前些日子遇到过&lt;a href=&quot;https://developer.android.com/studio/build/multidex.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Configure Apps with Over 64K Methods&lt;/a&gt;该问题，检查后发现Application并没继承&lt;a href=&quot;https://developer.android.com/reference/android/support/multidex/MultiDexApplication.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MultiDexApplication&lt;/a&gt;，而build.gradle中依赖也没了，仅仅剩余下述开关&lt;code&gt;multiDexEnabled true&lt;/code&gt; 。重新打包测试后果然是这个问题引发的血案，而出现这个问题是因为我和同事merge代码时候丢失部分修改导致的。&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;配置build.gradle (app)&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compileSdkVersion 21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buildToolsVersion &quot;21.1.0&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    defaultConfig &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        minSdkVersion 14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        targetSdkVersion 21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Enabling multidex support. 开关&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        multiDexEnabled true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dependencies &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 添加依赖&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  compile &#39;com.android.support:multidex:1.0.0&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;使用自定义的Application继承 &lt;code&gt;MultiDexApplication&lt;/code&gt; 这个类，或者重写Application的方法attachBaseContext()，并调用&lt;code&gt;MultiDex.install()&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;大周末的，突然接到老大的电话说很多用户无法安装新上线的APK，让我紧急Fix（现Android项目就我一己之力）。但奇怪的是也没有Bug Reporter，而且开发过程中也一直没问题。根据上报的几个用户的机型，我初步推断都是5.0以下的设备无法启动App，通过云测和优测的真
    
    </summary>
    
      <category term="Android异常" scheme="http://www.shutu.tech/categories/Android%E5%BC%82%E5%B8%B8/"/>
    
    
      <category term="Android" scheme="http://www.shutu.tech/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android context.getSystemService()浅析</title>
    <link href="http://www.shutu.tech/2016/09/02/Android-context-getSystemService-%E6%B5%85%E6%9E%90/"/>
    <id>http://www.shutu.tech/2016/09/02/Android-context-getSystemService-浅析/</id>
    <published>2016-09-01T16:55:52.000Z</published>
    <updated>2016-09-01T16:57:31.000Z</updated>
    
    <content type="html">&lt;p&gt;同事在进行code review的时候问到我context中的getSystemService方法在哪实现的，他看到了一个ClipBoardManager来进行剪切板存储数据的工具方法中用到了context.getSystemService()，而此处我使用的是Application级别的Context进行调用的，可IDE跳转时发现当前类中的getSystemService()方法居然是抽象的，Context类就是一个抽象类，没有具体的实现，可在进行调用的时候却一切正常，同事好奇该方法具体实现在哪实现的，于是我俩一起看源码和查资料后发现有几个值得注意的地方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统service获取和分享的问题，源码中提示到：&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Note:  System services obtained via this API may be closely associated with the Context in which they are obtained from.  In general, do not share the service objects between various different contexts (Activities, Applications, Services, Providers, etc.)&lt;/p&gt;
&lt;p&gt; 大意： 获取的系统service可能和他们的context有紧密联系，一般来说不要在不同的context之间分享服务对象，如Activity、Application、Service、Provider&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;明显同样的方法调用的具体实现不同，从同样拥有getSystemService的Activity的实现可以看到，虽然最终调用还是从LayoutInflater的context获取&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Activity中的getSystemService()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Object &lt;span class=&quot;title&quot;&gt;getSystemService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@ServiceName @NonNull String name)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (getBaseContext() == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;System services not available to Activities before onCreate()&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (WINDOW_SERVICE.equals(name)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mWindowManager;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (SEARCH_SERVICE.equals(name)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ensureSearchManager();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mSearchManager;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;comment&quot;&gt;// 以上的判断仅仅是为了检查是否为WindowManager获取窗口的服务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.getSystemService(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过super.getSystemService(name)跳转到ContextThemeWrapper这个Context.java类的代理类中，然而也并非是真正的具体实现，但是在此我们可以得知LayoutInflater实际上也是获取的是Application级别的全局context，因为该context也是该类中的mBase获取的😄：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Context &lt;span class=&quot;title&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mBase.getApplicationContext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * ContextThemeWrapper中的getSystemService()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Object &lt;span class=&quot;title&quot;&gt;getSystemService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String name)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (LAYOUT_INFLATER_SERVICE.equals(name)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mInflater == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInflater = LayoutInflater.from(getBaseContext()).cloneInContext(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mInflater;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; getBaseContext().getSystemService(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后又追溯到了Context.java中的getSystemService()，什么情况呢，具体实现在哪？？一番折腾后，找到了对应的Context实现类：ContextImpl.java&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Object &lt;span class=&quot;title&quot;&gt;getSystemService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String name)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; SystemServiceRegistry.getSystemService(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getSystemServiceName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Class&amp;lt;?&amp;gt; serviceClass)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; SystemServiceRegistry.getSystemServiceName(serviceClass);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;终于SystemServiceRegistry这个类中有了getSystemService的具体实现，调用的方法其实是getService()，这里三个方法很重要：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Creates an array which is used to cache per-Context service instances.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Object[] createServiceCache() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Object[sServiceCacheSize];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Gets a system service from a given context.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Object &lt;span class=&quot;title&quot;&gt;getSystemService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ContextImpl ctx, String name)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ServiceFetcher&amp;lt;?&amp;gt; fetcher = SYSTEM_SERVICE_FETCHERS.get(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; fetcher != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; ? fetcher.getService(ctx) : &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Gets the name of the system-level service that is represented by the specified class.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getSystemServiceName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Class&amp;lt;?&amp;gt; serviceClass)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; SYSTEM_SERVICE_NAMES.get(serviceClass);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Statically registers a system service with the context.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * This method must be called during static initialization only.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &amp;lt;T&amp;gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;registerService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String serviceName, Class&amp;lt;T&amp;gt; serviceClass,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ServiceFetcher&amp;lt;T&amp;gt; serviceFetcher)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    SYSTEM_SERVICE_NAMES.put(serviceClass, serviceName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    SYSTEM_SERVICE_FETCHERS.put(serviceName, serviceFetcher);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看出三个方法对service进行了创建、获取和注册。而SystemServiceRegistry这个类负责创建、启动和管理所有的服务，当需要用到哪个服务的时候，调用到getService方法然后进行名字的索引来找到需要的服务，里面的关键元素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;serviceFetcher&lt;/li&gt;
&lt;li&gt;IBinder，没错，实际上刚开始初始化的时候就是通过匿名内部类生成对应名字的服务，然后因为这些都是binder&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在启动APP时进行了必备的service注册，关于注册的服务就不列举了太多了，结构大致如此：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    registerService(Context.ACCESSIBILITY_SERVICE, AccessibilityManager.class,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CachedServiceFetcher&amp;lt;AccessibilityManager&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; AccessibilityManager &lt;span class=&quot;title&quot;&gt;createService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ContextImpl ctx)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; AccessibilityManager.getInstance(ctx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    registerService(Context.CAPTIONING_SERVICE, CaptioningManager.class,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CachedServiceFetcher&amp;lt;CaptioningManager&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; CaptioningManager &lt;span class=&quot;title&quot;&gt;createService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ContextImpl ctx)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CaptioningManager(ctx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    registerService(Context.ACCOUNT_SERVICE, AccountManager.class,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CachedServiceFetcher&amp;lt;AccountManager&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; AccountManager &lt;span class=&quot;title&quot;&gt;createService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ContextImpl ctx)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            IBinder b = ServiceManager.getService(Context.ACCOUNT_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            IAccountManager service = IAccountManager.Stub.asInterface(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AccountManager(ctx, service);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;// 代码省略。。。。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;感兴趣的朋友可以自己看看，进行注册时候是通过HashMap的方式将服务的名字进行了索引存放。&lt;/p&gt;
&lt;p&gt;上部分的代码中，可以看到有serviceFetcher相关的匿名内部类，每个服务对应了不同的实现，因此方法也是抽象的，下面是三个对应的静态抽象内部类和一个接口：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Base interface for classes that fetch services.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * These objects must only be created during static initialization.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ServiceFetcher&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;getService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ContextImpl ctx)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Override this class when the system service constructor needs a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * ContextImpl and should be cached and retained by that context.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CachedServiceFetcher&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ServiceFetcher&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; mCacheIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CachedServiceFetcher&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCacheIndex = sServiceCacheSize++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@SuppressWarnings&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;unchecked&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; T &lt;span class=&quot;title&quot;&gt;getService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ContextImpl ctx)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Object[] cache = ctx.mServiceCache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (cache) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Fetch or create the service.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Object service = cache[mCacheIndex];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (service == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                service = createService(ctx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                cache[mCacheIndex] = service;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (T)service;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; T &lt;span class=&quot;title&quot;&gt;createService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ContextImpl ctx)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Override this class when the system service does not need a ContextImpl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * and should be cached and retained process-wide.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StaticServiceFetcher&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ServiceFetcher&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; T mCachedInstance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; T &lt;span class=&quot;title&quot;&gt;getService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ContextImpl unused)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (StaticServiceFetcher.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedInstance == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mCachedInstance = createService();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mCachedInstance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; T &lt;span class=&quot;title&quot;&gt;createService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Like StaticServiceFetcher, creates only one instance of the service per process, but when&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * creating the service for the first time, passes it the outer context of the creating&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * component.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; Is this safe in the case where multiple applications share the same process?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; Delete this once its only user (ConnectivityManager) is known to work well in the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * case where multiple application components each have their own ConnectivityManager object.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StaticOuterContextServiceFetcher&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ServiceFetcher&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; T mCachedInstance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; T &lt;span class=&quot;title&quot;&gt;getService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ContextImpl ctx)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (StaticOuterContextServiceFetcher.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedInstance == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mCachedInstance = createService(ctx.getOuterContext());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mCachedInstance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; T &lt;span class=&quot;title&quot;&gt;createService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context applicationContext)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我俩整个过程花了15分钟就了解了getSystemService的具体调用和实现的方式，还是源码来得快，在进阶Android开发过程中，阅读系统和三方类库的源码能够帮我们事半功倍的效果。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;同事在进行code review的时候问到我context中的getSystemService方法在哪实现的，他看到了一个ClipBoardManager来进行剪切板存储数据的工具方法中用到了context.getSystemService()，而此处我使用的是Application级别的Context进行调用的，可IDE跳转时发现当前类中的getSystemService()方法居然是抽象的，Context类就是一个抽象类，没有具体的实现，可在进行调用的时候却一切正常，同事好奇该方法具体实现在哪实现的，于是我俩一起看源码和查资料后发现有几个值得注意的地方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统service获取和分享的问题，源码中提示到：&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Note:  System services obtained via this API may be closely associated with the Context in which they are obtained from.  In general, do not share the service objects between various different contexts (Activities, Applications, Services, Providers, etc.)&lt;/p&gt;
&lt;p&gt; 大意： 获取的系统service可能和他们的context有紧密联系，一般来说不要在不同的context之间分享服务对象，如Activity、Application、Service、Provider&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android源码分析" scheme="http://www.shutu.tech/categories/Android%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>五年计划 -- 内功修炼</title>
    <link href="http://www.shutu.tech/2016/08/28/%E4%BA%94%E5%B9%B4%E8%AE%A1%E5%88%92-%E5%86%85%E5%8A%9F%E4%BF%AE%E7%82%BC/"/>
    <id>http://www.shutu.tech/2016/08/28/五年计划-内功修炼/</id>
    <published>2016-08-28T02:06:30.000Z</published>
    <updated>2016-08-28T02:08:24.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;于2016-6-28-～-8-15记&quot;&gt;&lt;a href=&quot;#于2016-6-28-～-8-15记&quot; class=&quot;headerlink&quot; title=&quot;于2016.6.28 ～ 8.15记&quot;&gt;&lt;/a&gt;于2016.6.28 ～ 8.15记&lt;/h2&gt;&lt;p&gt;提前五年将你要做的事计划好，并且每天进步一点点，同样的五年后，意味着你比别人提前五年达到一个新的高度。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;一年内，初定版&quot;&gt;&lt;a href=&quot;#一年内，初定版&quot; class=&quot;headerlink&quot; title=&quot;一年内，初定版&quot;&gt;&lt;/a&gt;一年内，初定版&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;这一年将是成长最快和决定发展深度的一年，极其关键！&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Android framework&lt;/li&gt;
&lt;li&gt;各大类库源码消化理解&lt;/li&gt;
&lt;li&gt;博客技术专题分析&lt;/li&gt;
&lt;li&gt;出一个自己的APP上架Google Play&lt;ol&gt;
&lt;li&gt;API暂定干货集中营，并且视频和文章需要特定的兼容&lt;/li&gt;
&lt;li&gt;书途 （两者择优选择，精力有限，专注做一件事）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;研究ReactiveX系列，去Native是2C的趋势&lt;/li&gt;
&lt;li&gt;研究VR，自己实现一个VR系统&lt;/li&gt;
&lt;li&gt;学学C++／Python等别的编程语言&lt;/li&gt;
&lt;li&gt;把博客好好打理，文章尽量写得全面和精致一些，技术剖析深入透彻一些。参见“写博客的一些感想”&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;三年内大致有以下计划，初定版&quot;&gt;&lt;a href=&quot;#三年内大致有以下计划，初定版&quot; class=&quot;headerlink&quot; title=&quot;三年内大致有以下计划，初定版&quot;&gt;&lt;/a&gt;三年内大致有以下计划，初定版&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;完成译本&lt;/li&gt;
&lt;li&gt;出版一本以上的书籍&lt;/li&gt;
&lt;li&gt;GitHub提交一个以上的过千STAR类库&lt;/li&gt;
&lt;li&gt;做点有意义的事&lt;/li&gt;
&lt;li&gt;入职大公司&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;五年左右&quot;&gt;&lt;a href=&quot;#五年左右&quot; class=&quot;headerlink&quot; title=&quot;五年左右&quot;&gt;&lt;/a&gt;五年左右&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;初创公司/成为公司中高层&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;十年&quot;&gt;&lt;a href=&quot;#十年&quot; class=&quot;headerlink&quot; title=&quot;十年&quot;&gt;&lt;/a&gt;十年&lt;/h2&gt;&lt;p&gt;太远，不敢想&lt;/p&gt;
&lt;h2 id=&quot;关于译本&quot;&gt;&lt;a href=&quot;#关于译本&quot; class=&quot;headerlink&quot; title=&quot;关于译本&quot;&gt;&lt;/a&gt;关于译本&lt;/h2&gt;&lt;p&gt;译本尽量使用琐碎时间完成，最后进行多遍检验核对，可以请朋友协助&lt;/p&gt;
&lt;h4 id=&quot;译本候选&quot;&gt;&lt;a href=&quot;#译本候选&quot; class=&quot;headerlink&quot; title=&quot;译本候选&quot;&gt;&lt;/a&gt;译本候选&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Packet of Gradle for Android （已开始）&lt;/li&gt;
&lt;li&gt;Introduction to Java Programming（已开始）&lt;/li&gt;
&lt;li&gt;CC150&lt;/li&gt;
&lt;li&gt;Learning Python the hard way&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;50 Android Hacks （不必翻译，但由于已经有上市的译本，因此该书可以作为翻译规范／格式的参考）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于技能的学习，如XX语言达到精通，设计模式出神入化，这类计划都属于学习和工作过程必须掌握的硬技能，和自己上面的计划不属于同类计划，暂时不列入其中，还有计划需要切实而来，不可因虚荣心的作怪列一大堆无意义的需求。&lt;/p&gt;
&lt;p&gt;如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;英语能力提升一个新的高度&lt;/li&gt;
&lt;li&gt;年薪达到多少&lt;/li&gt;
&lt;li&gt;学好Java和Android&lt;/li&gt;
&lt;li&gt;掌握多门编程语言&lt;/li&gt;
&lt;li&gt;博客阅览量达到多少&lt;/li&gt;
&lt;li&gt;看多少本书&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;第一季度&quot;&gt;&lt;a href=&quot;#第一季度&quot; class=&quot;headerlink&quot; title=&quot;第一季度&quot;&gt;&lt;/a&gt;第一季度&lt;/h2&gt;&lt;h2 id=&quot;工作&quot;&gt;&lt;a href=&quot;#工作&quot; class=&quot;headerlink&quot; title=&quot;工作&quot;&gt;&lt;/a&gt;工作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;面试多个公司，拿到多个OFFER&lt;ul&gt;
&lt;li&gt;最近几个月左右把面试和工作相关的事情准备好&lt;ul&gt;
&lt;li&gt;面试需要的数据结构算法： 刷题，同时看书梳理相应的知识点&lt;/li&gt;
&lt;li&gt;项目上糟乱的代码重构&lt;/li&gt;
&lt;li&gt;设计模式的思维训练，在工作上使用到&lt;/li&gt;
&lt;li&gt;基础方面看书，编程思想和EFJava看完&lt;/li&gt;
&lt;li&gt;各公司Post简历要求的核心技术：&lt;ul&gt;
&lt;li&gt;熟悉常用的数据结构和算法&lt;/li&gt;
&lt;li&gt;APP逆向分析；&lt;/li&gt;
&lt;li&gt;对前后台架构有一定了解；&lt;/li&gt;
&lt;li&gt;熟练掌握java或C++等任一门面向对象的编程语言；&lt;/li&gt;
&lt;li&gt;具备Android应用层调试分析能力，快速定位解决ANR、crash等问题；&lt;/li&gt;
&lt;li&gt;对底层框架、内核有所理解和探究，习惯于较别人深入一层；拥有和工作年限相称的广度和（或）深度；&lt;/li&gt;
&lt;li&gt;熟悉Linux系统，了解Kernel，有嵌入式系统或硬件研发经验者优先；&lt;/li&gt;
&lt;li&gt;必须）精通 Android APP 设计与开发；除功能属性之外，熟练掌握和 APP 安全、性能、稳定性等非功能属性相关的技术；&lt;/li&gt;
&lt;li&gt;有良好维护的博客或开源作品者优先&lt;/li&gt;
&lt;li&gt;熟悉HTML5, JS技术&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面提到的核心技术，不必全研究，寻找适合自己深度发展的方向再定。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;换工作，仔细思考哪几家公司是你的目标&lt;ul&gt;
&lt;li&gt;乐视&lt;/li&gt;
&lt;li&gt;爱奇艺&lt;/li&gt;
&lt;li&gt;优酷土豆&lt;/li&gt;
&lt;li&gt;BAT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;跳槽之后&quot;&gt;&lt;a href=&quot;#跳槽之后&quot; class=&quot;headerlink&quot; title=&quot;跳槽之后&quot;&gt;&lt;/a&gt;跳槽之后&lt;/h2&gt;&lt;p&gt;这次一待就是三五年以上的时间，为了让自己走得更远，务必珍惜这段时光。&lt;/p&gt;
&lt;p&gt;过程中还会伴随自己的婚姻大事、购房购车体验，但是明白自己所追求的目标即可。并且，家人是你一生的幸福，孝顺父母、呵护妻子和孩子、珍惜身边的朋友才有所谓的成家立业。&lt;/p&gt;
&lt;h2 id=&quot;告诫&quot;&gt;&lt;a href=&quot;#告诫&quot; class=&quot;headerlink&quot; title=&quot;告诫&quot;&gt;&lt;/a&gt;告诫&lt;/h2&gt;&lt;p&gt;一切障碍都是自己推脱的借口。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;于2016-6-28-～-8-15记&quot;&gt;&lt;a href=&quot;#于2016-6-28-～-8-15记&quot; class=&quot;headerlink&quot; title=&quot;于2016.6.28 ～ 8.15记&quot;&gt;&lt;/a&gt;于2016.6.28 ～ 8.15记&lt;/h2&gt;&lt;p&gt;提前五年将你要做的事计划好，并且每天进步一点点，同样的五年后，意味着你比别人提前五年达到一个新的高度。&lt;/p&gt;
    
    </summary>
    
      <category term="职业生涯" scheme="http://www.shutu.tech/categories/%E8%81%8C%E4%B8%9A%E7%94%9F%E6%B6%AF/"/>
    
    
      <category term="个人计划" scheme="http://www.shutu.tech/tags/%E4%B8%AA%E4%BA%BA%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>《App研发录》总结</title>
    <link href="http://www.shutu.tech/2016/07/24/%E3%80%8AApp%E7%A0%94%E5%8F%91%E5%BD%95%E3%80%8B--%20%E8%AF%BB%E4%B9%A6%E6%80%BB%E7%BB%93/"/>
    <id>http://www.shutu.tech/2016/07/24/《App研发录》-- 读书总结/</id>
    <published>2016-07-24T03:55:46.000Z</published>
    <updated>2016-08-07T04:26:55.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;看这本书的时候，总感觉怪怪的。&lt;/p&gt;
&lt;p&gt;因为在地铁上看完的，作者书中基本都是他自己工作中遇到的问题和坑，虽说这样会让人感觉找到了解决方案，可以再进行深入的研究，可是某些地方介绍的有点片面，仅仅是引用部分博客就以偏概全了。还有可能是涉及的内容大部分都是我自己已经踩过的坑，所以觉得学到的东西不太多。&lt;/p&gt;
&lt;p&gt;再说说值得一看的地方吧，首先也如前面提到的，书中内容基本都是作者工作之谈，所以有很实用的内容，推荐阅读章节：&lt;/p&gt;
&lt;h3 id=&quot;App竞品技术分析&quot;&gt;&lt;a href=&quot;#App竞品技术分析&quot; class=&quot;headerlink&quot; title=&quot;App竞品技术分析&quot;&gt;&lt;/a&gt;App竞品技术分析&lt;/h3&gt;&lt;p&gt;个人认为这是本书的精华，很少看到有人愿意这样详尽的介绍自己的“机密”经验，感谢作者的无私分享。&lt;/p&gt;
&lt;h3 id=&quot;五、六、七章的异常和ProGuard&quot;&gt;&lt;a href=&quot;#五、六、七章的异常和ProGuard&quot; class=&quot;headerlink&quot; title=&quot;五、六、七章的异常和ProGuard&quot;&gt;&lt;/a&gt;五、六、七章的异常和ProGuard&lt;/h3&gt;&lt;p&gt;介绍很详细，网上都是非常琐碎的介绍，推荐新人看看这部分，尤其是ProGuard，虽然现在第三方已经给出了完善的解决方案，帮我们做了这部分事情，不过了解最基本的原理才能学得更透彻。&lt;/p&gt;
&lt;h3 id=&quot;项目、团队管理部分&quot;&gt;&lt;a href=&quot;#项目、团队管理部分&quot; class=&quot;headerlink&quot; title=&quot;项目、团队管理部分&quot;&gt;&lt;/a&gt;项目、团队管理部分&lt;/h3&gt;&lt;p&gt;这部分是时间的积累才能收获的，提前学习了解以后我们必须经历的路没什么不好的。测试部分相关的部分是很少有书籍能够提及，值得看看。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;第一章小结&quot;&gt;&lt;a href=&quot;#第一章小结&quot; class=&quot;headerlink&quot; title=&quot;第一章小结&quot;&gt;&lt;/a&gt;第一章小结&lt;/h1&gt;&lt;h2 id=&quot;重构目录&quot;&gt;&lt;a href=&quot;#重构目录&quot; class=&quot;headerlink&quot; title=&quot;重构目录&quot;&gt;&lt;/a&gt;重构目录&lt;/h2&gt;&lt;p&gt;将混乱类文件按照自己的职责划分并存放在相关目录下，如：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;com.xxx.xxx. | -- activity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			| -- utils&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  			| -- adapter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  			| -- entity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  			| -- ui&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  			| -- interface&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  			| -- listener&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有了清晰的目录结构，寻找各功能的类文件方便得多，而且便于团队间多人协作开发。谁也不愿意找个相关类全路径的到处搜，干这种事的人不被同事骂死才怪。&lt;/p&gt;
&lt;h3 id=&quot;归类注意的几个点：&quot;&gt;&lt;a href=&quot;#归类注意的几个点：&quot; class=&quot;headerlink&quot; title=&quot;归类注意的几个点：&quot;&gt;&lt;/a&gt;归类注意的几个点：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;遵循单一职责原则，业务、功能耦合过多的文件、代码尽量拆分为多个文件或方法&lt;/li&gt;
&lt;li&gt;形象化，类名、方法名一眼就应该知道干嘛的，取名别太抽象，Activity1.java这种名是欠打呢。与视频相关的Activity应取名：VideoActivity.java，听过有人喜欢把Activity放在前面（ActivityVideo.java）看起来统一，但感觉那样进行索引文件的时候不方便，每次都要打全Activity + Suffix，不如Prefix来得方便。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;重定义生命周期&quot;&gt;&lt;a href=&quot;#重定义生命周期&quot; class=&quot;headerlink&quot; title=&quot;重定义生命周期&quot;&gt;&lt;/a&gt;重定义生命周期&lt;/h2&gt;&lt;p&gt;该部分主要说明对Activity一个简单的封装，Activity都继承一个基类BaseActivity，其中BaseActivity将常用的操作封装起来当作一种规范，如onCreate() —&amp;gt; initViews() —&amp;gt; loadData() 。事实上现在很多项目都是使用的各种框架库，如ButterKnife、EventBus，Otto等，所以这种较老的方式或许慢慢少了起来，可主要的抽象思想都应该有嘛。&lt;/p&gt;
&lt;h2 id=&quot;统一编程模型&quot;&gt;&lt;a href=&quot;#统一编程模型&quot; class=&quot;headerlink&quot; title=&quot;统一编程模型&quot;&gt;&lt;/a&gt;统一编程模型&lt;/h2&gt;&lt;p&gt;这个地方个人不是太赞同作者推荐的View.setOnClickListener(new OnClickListener() { Override onclick() { … } }这种方式来进行事件注册。确实switch … case … 有点“扰乱”面向对象的风格，可想想一个代码较多的Activity中，你要迅速定位某个onClick事件使用后者有多么方便，并且onClick的事件都能统一管理，无需再担心某个地方漏了一个onClIck。&lt;/p&gt;
&lt;h2 id=&quot;实体化编程&quot;&gt;&lt;a href=&quot;#实体化编程&quot; class=&quot;headerlink&quot; title=&quot;实体化编程&quot;&gt;&lt;/a&gt;实体化编程&lt;/h2&gt;&lt;p&gt;通过固定的类库达到我们想要的目的，常用类库Gson、FastJson等，不用过多赘述。其中有一点值得一看，就是关于后面提到的Crash事件处理，其实在传递Intent的时候也可进行避免某些Crash的操作，如长时间的闲置导致内存回收时将关键的变量给回收了，当前跳转页面的时候是需要那个变量的，而传递变量的同时可以进行检查判断是否为null来减少跳转后的NPE(NullPointerException) Crash。这些都是我个人的经验。&lt;/p&gt;
&lt;h3 id=&quot;推荐工具：&quot;&gt;&lt;a href=&quot;#推荐工具：&quot; class=&quot;headerlink&quot; title=&quot;推荐工具：&quot;&gt;&lt;/a&gt;推荐工具：&lt;/h3&gt;&lt;p&gt;这里书中提到的工具都过时了吧（绝对没有嘲讽的意思，能分享的人都是伟大的）。因为拿来主义的我一般用的都是Android Studio中的插件&lt;a href=&quot;https://github.com/zzz40500/GsonFormat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GsonFormat&lt;/a&gt; ，不支持Eclipse！&lt;/p&gt;
&lt;p&gt;关于更多工具，推荐看看我的博文：&lt;a href=&quot;http://www.shutu.tech/2016/05/09/Android-Classical-OpenSource/#more&quot;&gt;Android-Classical-OpenSource&lt;/a&gt;的工具篇，有我常用的AS的插件和相关工具的介绍。&lt;/p&gt;
&lt;h1 id=&quot;第二章小结&quot;&gt;&lt;a href=&quot;#第二章小结&quot; class=&quot;headerlink&quot; title=&quot;第二章小结&quot;&gt;&lt;/a&gt;第二章小结&lt;/h1&gt;&lt;p&gt;第二章主讲网络框架的经验，涉及到的有对网络底层框架的封装，作者遇到的坑和某些网络类库的使用优化建议等。对于网络请求这类操作，当前衍生的各种相关类库功能十分强大，而且基本都封装好了，在使用方便的同时可不要忽略底层的概念，一门技术要做到：知其然，知其所以然。这样无论遇到什么问题都能有一颗冷静沉着的心去面对和挑战。&lt;/p&gt;
&lt;h2 id=&quot;网络底层封装&quot;&gt;&lt;a href=&quot;#网络底层封装&quot; class=&quot;headerlink&quot; title=&quot;网络底层封装&quot;&gt;&lt;/a&gt;网络底层封装&lt;/h2&gt;&lt;p&gt;家家使用的工具都不同，但常用的也就那么几个：&lt;/p&gt;
&lt;h3 id=&quot;Volley&quot;&gt;&lt;a href=&quot;#Volley&quot; class=&quot;headerlink&quot; title=&quot;Volley&quot;&gt;&lt;/a&gt;Volley&lt;/h3&gt;&lt;p&gt;目前公司项目用的就是这一个，还是我当时建项以来综合对比后挑的一个，那时候的OkHttp还没有现在这样火好不好。所以我们也当然对Volley进行了简单的封装，这里不说文章，先谈谈我对Volley封装的看法吧。&lt;/p&gt;
&lt;p&gt;打开Volley的目录结构，在toolbox中可以看到网络请求类常用的有这么几个&lt;/p&gt;
&lt;h4 id=&quot;String&quot;&gt;&lt;a href=&quot;#String&quot; class=&quot;headerlink&quot; title=&quot;String&quot;&gt;&lt;/a&gt;String&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;StringRequest ：常用的文本、字符串都可以使用此方式。这里给出封装的例子：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接口类RequestCallbackable.java，用于进行请求结果的回调。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RequestCallbackable&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onSuccess&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T model)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onFailure&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T msg)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;封装方法中，由于请求分为Get和Post两种，并且很可能Post会含有Body，因此需要二次封装，下面是基于StringRequest的一个完整封装类&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HttpUtils&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; VOLLEY_REQUEST_TIMEOUT_MS = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; VOLLEY_REQUEST_RETRY_TIMES = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Get请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; strKVs 这里的strKVs代表Get的参数字段，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *               如果没有参数或者body则不填，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *               格式为：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *               &quot;user[name]&quot;, username,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *               &quot;user[password]&quot;, userPassword,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *               &quot;user[id]&quot;, userId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doVolleyGet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String getUrl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; RequestCallbackable requestResult,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String... strKVs)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        doVolleyRequest(Request.Method.GET, getUrl, requestResult, strKVs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Post请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; strKVs 这里的strKVs代表Post的参数、body字段，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *               如果没有参数或者body则不填，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *               格式为：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *               &quot;user[name]&quot;, username,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *               &quot;user[password]&quot;, userPassword,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *               &quot;user[id]&quot;, userId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doVolleyPost&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String getUrl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; RequestCallbackable requestResult,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String... strKVs)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        doVolleyRequest(Request.Method.POST, getUrl, requestResult, strKVs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * RequestManager需要在Application初始化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 关于RequestManager的使用详情请自行谷歌&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doVolleyRequest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; requestMethod, String requestUrl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; RequestCallbackable requestCallbackable,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String... paramsStrKVs)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (TextUtils.isEmpty(requestUrl)) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 使用的是StringRequest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        StringRequest requestPost = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringRequest(requestMethod, requestUrl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Response.Listener&amp;lt;String&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onResponse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String resultStr)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (requestCallbackable != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          requestCallbackable.onSuccess(resultStr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Response.ErrorListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onErrorResponse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(VolleyError volleyError)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (requestCallbackable != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  requestCallbackable.onFailure(volleyError);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Map&amp;lt;String, String&amp;gt; &lt;span class=&quot;title&quot;&gt;getHeaders&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; AuthFailureError &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Map&amp;lt;String, String&amp;gt; params = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;String, String&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                params.put(&lt;span class=&quot;string&quot;&gt;&quot;Authentication&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;here put your Token&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; params;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Map&amp;lt;String, String&amp;gt; &lt;span class=&quot;title&quot;&gt;getParams&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; AuthFailureError &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                HashMap&amp;lt;String, String&amp;gt; map = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;String, String&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (paramsStrKVs != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (paramsStrKVs.length % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; paramsStrKVs.length; i += &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        map.put(paramsStrKVs[i], paramsStrKVs[i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; map;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] getBody() &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; AuthFailureError &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                String httpPostBody = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (paramsStrKVs != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (paramsStrKVs.length % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; paramsStrKVs.length; i += &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        httpPostBody += (i == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;) + paramsStrKVs[i] + &lt;span class=&quot;string&quot;&gt;&quot;=&quot;&lt;/span&gt; + paramsStrKVs[i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; httpPostBody.getBytes();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 设置volley的请求超时时间，重试次数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        requestPost.setRetryPolicy(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DefaultRetryPolicy(VOLLEY_REQUEST_TIMEOUT_MS, VOLLEY_REQUEST_RETRY_TIMES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// queueTag 用于调用cancelAll(queueTag)取消加入队列的请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        requestPost.setTag(RequestManager.getRequestQueue.getQueueTag());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        RequestManager.getRequestQueue().add(requestPost);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;使用方式&quot;&gt;&lt;a href=&quot;#使用方式&quot; class=&quot;headerlink&quot; title=&quot;使用方式&quot;&gt;&lt;/a&gt;使用方式&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;HttpUtils.doVolleyGet(&lt;span class=&quot;string&quot;&gt;&quot;your request url&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RequestCallbackable() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onSuccess&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Object model)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// request onSuccess callback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// this callback on UI main thread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onFailure&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Object msg)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// request onFailure callback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// this callback on UI main thread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;user[name]&quot;&lt;/span&gt;, username,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;user[password]&quot;&lt;/span&gt;, userPassword,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;user[id]&quot;&lt;/span&gt;, userId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h4 id=&quot;Iamge&quot;&gt;&lt;a href=&quot;#Iamge&quot; class=&quot;headerlink&quot; title=&quot;Iamge&quot;&gt;&lt;/a&gt;Iamge&lt;/h4&gt;&lt;h5 id=&quot;ImageRequest&quot;&gt;&lt;a href=&quot;#ImageRequest&quot; class=&quot;headerlink&quot; title=&quot;ImageRequest&quot;&gt;&lt;/a&gt;ImageRequest&lt;/h5&gt;&lt;p&gt;比起上面的StringRequest要简单，封装方式差不多，也就不多说了。ImageRequest的简单使用方式：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ImageRequest imagerequest = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ImageRequest(&lt;span class=&quot;string&quot;&gt;&quot;your image url&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Response.Listener&amp;lt;Bitmap&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onResponse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bitmap bitmap)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;comment&quot;&gt;// callback on UI main thread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                maxWidth, maxHeight,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ImageView.ScaleType.CENTER,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Bitmap.Config.ARGB_8888,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Response.ErrorListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onErrorResponse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(VolleyError volleyError)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;comment&quot;&gt;// error callback on UI main thread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h4 id=&quot;NetworkImageView&quot;&gt;&lt;a href=&quot;#NetworkImageView&quot; class=&quot;headerlink&quot; title=&quot;NetworkImageView&quot;&gt;&lt;/a&gt;NetworkImageView&lt;/h4&gt;&lt;p&gt;这可是个重头戏，通过NetworkImageView.setImageUrl()来进行ImageView的图片下载，结合LRU进行图片的二级缓存（内存、磁盘），需要注意的是，Volley的请求方式都是通过RequestQueue这个队列进行网络访问的，也就是说通常全局只需要使用同一个Queue，那么RequestManager的目的就是为了实例化Queue以保证方法对其正常的调用。&lt;br&gt;NetworkImageView的使用方式：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NetworkImageView imageview = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imageview = (ImageView) findViewById(R.id.your_image_view_id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imageview.setImageUrl(&lt;span class=&quot;string&quot;&gt;&quot;your image url&quot;&lt;/span&gt;, ImageCacheManager.getInstance().getImageLoader());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;说到这里，慢慢引申出了ImageCacheManager这个神奇的Manager类，实际上ImageCacheManager也是一个封装类，将Volley的ImageLoader包装起来，实现了二级缓存策略。详情见&lt;a href=&quot;https://github.com/rdrobinson3/VolleyImageCacheExample&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;该作者的GitHub&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&quot;JSON&quot;&gt;&lt;a href=&quot;#JSON&quot; class=&quot;headerlink&quot; title=&quot;JSON&quot;&gt;&lt;/a&gt;JSON&lt;/h4&gt;&lt;p&gt;Json请求方式和StringRequest大同小异，只不过回调的对象是JSONObject罢了，不介绍了。相关请求类如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;JsonRequest&quot;&gt;&lt;a href=&quot;#JsonRequest&quot; class=&quot;headerlink&quot; title=&quot;JsonRequest&quot;&gt;&lt;/a&gt;JsonRequest&lt;/h5&gt;&lt;/li&gt;
&lt;li&gt;&lt;h5 id=&quot;JsonObjectRequest&quot;&gt;&lt;a href=&quot;#JsonObjectRequest&quot; class=&quot;headerlink&quot; title=&quot;JsonObjectRequest&quot;&gt;&lt;/a&gt;JsonObjectRequest&lt;/h5&gt;&lt;/li&gt;
&lt;li&gt;&lt;h5 id=&quot;JsonArrayRequest&quot;&gt;&lt;a href=&quot;#JsonArrayRequest&quot; class=&quot;headerlink&quot; title=&quot;JsonArrayRequest&quot;&gt;&lt;/a&gt;JsonArrayRequest&lt;/h5&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今天先到这儿吧，再续。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;看这本书的时候，总感觉怪怪的。&lt;/p&gt;
&lt;p&gt;因为在地铁上看完的，作者书中基本都是他自己工作中遇到的问题和坑，虽说这样会让人感觉找到了解决方案，可以再进行深入的研究，可是某些地方介绍的有点片面，仅仅是引用部分博客就以偏概全了。还有可能是涉及的内容大部分都是我自己已经踩过的坑，所以觉得学到的东西不太多。&lt;/p&gt;
&lt;p&gt;再说说值得一看的地方吧，首先也如前面提到的，书中内容基本都是作者工作之谈，所以有很实用的内容，推荐阅读章节：&lt;/p&gt;
&lt;h3 id=&quot;App竞品技术分析&quot;&gt;&lt;a href=&quot;#App竞品技术分析&quot; class=&quot;headerlink&quot; title=&quot;App竞品技术分析&quot;&gt;&lt;/a&gt;App竞品技术分析&lt;/h3&gt;&lt;p&gt;个人认为这是本书的精华，很少看到有人愿意这样详尽的介绍自己的“机密”经验，感谢作者的无私分享。&lt;/p&gt;
&lt;h3 id=&quot;五、六、七章的异常和ProGuard&quot;&gt;&lt;a href=&quot;#五、六、七章的异常和ProGuard&quot; class=&quot;headerlink&quot; title=&quot;五、六、七章的异常和ProGuard&quot;&gt;&lt;/a&gt;五、六、七章的异常和ProGuard&lt;/h3&gt;&lt;p&gt;介绍很详细，网上都是非常琐碎的介绍，推荐新人看看这部分，尤其是ProGuard，虽然现在第三方已经给出了完善的解决方案，帮我们做了这部分事情，不过了解最基本的原理才能学得更透彻。&lt;/p&gt;
&lt;h3 id=&quot;项目、团队管理部分&quot;&gt;&lt;a href=&quot;#项目、团队管理部分&quot; class=&quot;headerlink&quot; title=&quot;项目、团队管理部分&quot;&gt;&lt;/a&gt;项目、团队管理部分&lt;/h3&gt;&lt;p&gt;这部分是时间的积累才能收获的，提前学习了解以后我们必须经历的路没什么不好的。测试部分相关的部分是很少有书籍能够提及，值得看看。&lt;/p&gt;
    
    </summary>
    
      <category term="读书" scheme="http://www.shutu.tech/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="Android" scheme="http://www.shutu.tech/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>偷偷《暗时间》</title>
    <link href="http://www.shutu.tech/2016/06/29/%E5%81%B7%E5%81%B7%E3%80%8A%E6%9A%97%E6%97%B6%E9%97%B4%E3%80%8B/"/>
    <id>http://www.shutu.tech/2016/06/29/偷偷《暗时间》/</id>
    <published>2016-06-29T15:07:42.000Z</published>
    <updated>2016-08-17T05:55:40.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;关于这本书，是通过知乎了解的，不犹豫的下单，结果一发不可收拾。不得不说，作者刘未鹏真的很NB。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eterrao/eterrao.github.io/master/%E6%9A%97%E6%97%B6%E9%97%B4.jpg&quot; alt=&quot;暗时间&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;心得&quot;&gt;&lt;a href=&quot;#心得&quot; class=&quot;headerlink&quot; title=&quot;心得&quot;&gt;&lt;/a&gt;心得&lt;/h1&gt;&lt;p&gt;懒惰的我很少写这种读书笔记，但是既然读了这本书，那么就应该做些什么才对，例如总结阅读后的知识点，问题深思后的理论分析等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缺点：&lt;ul&gt;
&lt;li&gt;在详细总结这本书的时候，先说说看了一半后感觉到的不足吧。首先是总觉得这本书是在记叙成功学的书，虽然成功没有什么不好，人人都希望成功，但长篇提及成功的字眼让我感觉有点难受。这是一本思维导图，时间、自我管理的书籍，如果没有那么多的字眼就完美了。可能是因为我看了《把时间当作朋友》书中提及反对成功学的部分，从此对所谓成功学说心生厌恶。&lt;/li&gt;
&lt;li&gt;如豆友所说的，连贯性不够。如作者提及的，看书要择优选择阅读，所以部分章节我仅仅是粗略的扫了一眼，这本书是挤地铁的时候看的，所以没有那么多精力仔细集中在某些需要细思的章节中，如”逃出你的肖申克“。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点说完了，我该感激作者了，所谓先抑后扬。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;环境的重要性&quot;&gt;&lt;a href=&quot;#环境的重要性&quot; class=&quot;headerlink&quot; title=&quot;环境的重要性&quot;&gt;&lt;/a&gt;环境的重要性&lt;/h1&gt;&lt;p&gt;如果作者没有一位耐心、专注的父亲作为榜样来引导自己，或许会花更多时间来悟出书中的感想。毕竟父母是我们一辈子最好的老师。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;写一个博客有很多好处，却没有任何明显的坏处&lt;/p&gt;
&lt;p&gt;书写是为了更好的思考&lt;/p&gt;
&lt;p&gt;如果一件事情你不能讲清楚，十有八九你还没有完全理解&lt;/p&gt;
&lt;p&gt;博客可以激励你去持续学习和思考，如果你没有持续学习和思考的习惯，你的博客很快就没有内容可写，就只能碎碎念或者转载。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此前我一直希望能够写出NB精彩绝伦的博客，引来无数网友的围观和赞赏，以此满足自己的虚荣心并且可以当作找工作的敲门砖。庆幸早读这本书，不然走向不归路啊，我一直没有耐心去写完一篇我满意的博客，原因之一就是每次写什么的时候，根本没有透彻的思考问题，导致写着写着感觉和别人的都一样雷同，千篇一律的像工具说明书一样没有什么价值所在，于是存为草稿，之后只会变为删除草稿的结局。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;让你自己成为一个持续学习和思考的人，并只写你真正思考和总结之后的产物，其他的一切就会随之而来&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;尤为喜欢这句话，所以今天把曾经的博文都整理了一遍，垃圾该清理的清理，接下来学习深度总结和思考，不跟风随波逐流。&lt;/p&gt;
&lt;h1 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h1&gt;&lt;p&gt;仅仅接触此书两天不到的时间，之后每次写代码之前，都会有意识的去思考更多，不再像曾经拿着就开始着手实现业务逻辑，更注重设计模式，架构的重要性。真的是这种感觉。&lt;/p&gt;
&lt;p&gt;暂时就这么多，看完再说吧。&lt;/p&gt;
&lt;h1 id=&quot;近期感悟&quot;&gt;&lt;a href=&quot;#近期感悟&quot; class=&quot;headerlink&quot; title=&quot;近期感悟&quot;&gt;&lt;/a&gt;近期感悟&lt;/h1&gt;&lt;p&gt;直到”跟波利亚学解题”，已经一周没看这本书了，但是工作之余却反思和遵循一些书中所说的行为或者技巧，如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;充分利用自己的暗时间，就相当于自己多活了一段时间&lt;/li&gt;
&lt;li&gt;每个人都有自己的思维体力，需要锻炼才能持续更长更久&lt;/li&gt;
&lt;li&gt;嘈杂的环境看书是最能锻炼注意力的（地铁上）&lt;/li&gt;
&lt;li&gt;睡觉前思考一些问题，让大脑长时间保持对问题的思考，潜意识就能解决很多问题&lt;/li&gt;
&lt;li&gt;最近正在复习数据结构与算法，每当自己觉得明白了以后，会习惯的反问和思考自己是否真的理解透彻了，受益匪浅；&lt;/li&gt;
&lt;li&gt;每当走在路上的时候，曾经的我会看天看地看人，如今却总觉得这部分暗时间需要利用起来，毕竟我也想“多活一段时间”嘛；&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;“跟波利亚学解题”后篇&quot;&gt;&lt;a href=&quot;#“跟波利亚学解题”后篇&quot; class=&quot;headerlink&quot; title=&quot;“跟波利亚学解题”后篇&quot;&gt;&lt;/a&gt;“跟波利亚学解题”后篇&lt;/h4&gt;&lt;p&gt;今天又继续阅读”跟波利亚学解题”，发现以前的我好傻，庆幸现在还不晚。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学会总结，一个问题从理解到运用相差十万八千里，所以曾经做题并不是看完答案恍然大悟就可以了，而需要仔细思考实现的思想，把能够举一反三的部分提取出来；&lt;/li&gt;
&lt;li&gt;学以复用，知识学而不用死读书记在脑子里反而浪费脑容量；&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;悟&quot;&gt;&lt;a href=&quot;#悟&quot; class=&quot;headerlink&quot; title=&quot;悟&quot;&gt;&lt;/a&gt;悟&lt;/h1&gt;&lt;p&gt;人都是惰性的，前些日子有些倦怠，尤其是在面临庞杂的基础知识点因为曾经没学或者学的太浅，导致自己变得着急且浮躁。&lt;/p&gt;
&lt;p&gt;自己想想，同样写博客，也需要追求质与量。如果逃避的去不敢面对自己的软肋，当然得不到太大的成长。&lt;/p&gt;
&lt;p&gt;凡事总有先难后易，如暗时间所说的，硬着头皮去做，麻木了以后也就变成习惯了。所以博客一定要坚持写下去，并且保证内容的可读性，别总是模仿别人，自己有感而发并没什么不好的。&lt;/p&gt;
&lt;p&gt;自己准备试着翻译一下外文资料或者书籍，一是对英语有提高，二是知识点理解也更为透彻。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;关于这本书，是通过知乎了解的，不犹豫的下单，结果一发不可收拾。不得不说，作者刘未鹏真的很NB。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eterrao/eterrao.github.io/master/%E6%9A%97%E6%97%B6%E9%97%B4.jpg&quot; alt=&quot;暗时间&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;心得&quot;&gt;&lt;a href=&quot;#心得&quot; class=&quot;headerlink&quot; title=&quot;心得&quot;&gt;&lt;/a&gt;心得&lt;/h1&gt;&lt;p&gt;懒惰的我很少写这种读书笔记，但是既然读了这本书，那么就应该做些什么才对，例如总结阅读后的知识点，问题深思后的理论分析等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缺点：&lt;ul&gt;
&lt;li&gt;在详细总结这本书的时候，先说说看了一半后感觉到的不足吧。首先是总觉得这本书是在记叙成功学的书，虽然成功没有什么不好，人人都希望成功，但长篇提及成功的字眼让我感觉有点难受。这是一本思维导图，时间、自我管理的书籍，如果没有那么多的字眼就完美了。可能是因为我看了《把时间当作朋友》书中提及反对成功学的部分，从此对所谓成功学说心生厌恶。&lt;/li&gt;
&lt;li&gt;如豆友所说的，连贯性不够。如作者提及的，看书要择优选择阅读，所以部分章节我仅仅是粗略的扫了一眼，这本书是挤地铁的时候看的，所以没有那么多精力仔细集中在某些需要细思的章节中，如”逃出你的肖申克“。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点说完了，我该感激作者了，所谓先抑后扬。&lt;/p&gt;
    
    </summary>
    
      <category term="读书" scheme="http://www.shutu.tech/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="时间管理，思维导图" scheme="http://www.shutu.tech/tags/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%EF%BC%8C%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建博客的几个小问题</title>
    <link href="http://www.shutu.tech/2016/06/26/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%87%A0%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
    <id>http://www.shutu.tech/2016/06/26/hexo搭建博客的几个小问题/</id>
    <published>2016-06-26T14:04:53.000Z</published>
    <updated>2016-07-08T16:20:59.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;所有博客显示未命名-untitled&quot;&gt;&lt;a href=&quot;#所有博客显示未命名-untitled&quot; class=&quot;headerlink&quot; title=&quot;所有博客显示未命名(untitled)&quot;&gt;&lt;/a&gt;所有博客显示未命名(untitled)&lt;/h4&gt;&lt;p&gt;因为接触hexo不多，刚开始写的博客都是通过自己创建MarkDown文件导入到post中的，所以自然没有前缀，解决方式如下即可&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#以如下格式输入相应的字段&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: hexo搭建博客的几个小问题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-06-26 22:04:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#####正文内容&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;hexo在generate的时候会自动索引当前文件的标题、时间和tags等&lt;/p&gt;
&lt;h4 id=&quot;博客首页折叠&quot;&gt;&lt;a href=&quot;#博客首页折叠&quot; class=&quot;headerlink&quot; title=&quot;博客首页折叠&quot;&gt;&lt;/a&gt;博客首页折叠&lt;/h4&gt;&lt;p&gt;部署后发现首页的文章都是全部预览的，但别人的都是有个&lt;strong&gt;阅读全文&lt;/strong&gt;，其实在MD文件中添加一行代码就搞定了&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#####首页显示内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- more --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#####隐藏内容&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;hexo部署后，CNAME会被自动删除&quot;&gt;&lt;a href=&quot;#hexo部署后，CNAME会被自动删除&quot; class=&quot;headerlink&quot; title=&quot;hexo部署后，CNAME会被自动删除&quot;&gt;&lt;/a&gt;hexo部署后，CNAME会被自动删除&lt;/h4&gt;&lt;p&gt;将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;hexo创建新文章&quot;&gt;&lt;a href=&quot;#hexo创建新文章&quot; class=&quot;headerlink&quot; title=&quot;hexo创建新文章&quot;&gt;&lt;/a&gt;hexo创建新文章&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &amp;quot;your file name&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该命令会在source/_post/目录下生成一个your-file-name.md文件，文件会默认附带标题、时间和tag/category等开头，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: hexo搭建博客的几个小问题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-06-26 22:04:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;hexo创建新的分类&quot;&gt;&lt;a href=&quot;#hexo创建新的分类&quot; class=&quot;headerlink&quot; title=&quot;hexo创建新的分类&quot;&gt;&lt;/a&gt;hexo创建新的分类&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new page &amp;quot;your page name&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此时需要在scaffolds/post.md文件中添加一行你的分类，例如：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: &amp;#123;&amp;#123; title &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: &amp;#123;&amp;#123; date &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;categories: # 添加该行，新增的分类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多请参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next/wiki/%E5%88%9B%E5%BB%BA%E5%88%86%E7%B1%BB%E9%A1%B5%E9%9D%A2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;创建分类页面&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next/issues/51&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于categories和tags的问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://ijiaober.github.io/2014/08/05/hexo/hexo-04/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo的分类和标签设置&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;hexo创建草稿&quot;&gt;&lt;a href=&quot;#hexo创建草稿&quot; class=&quot;headerlink&quot; title=&quot;hexo创建草稿&quot;&gt;&lt;/a&gt;hexo创建草稿&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new draft &amp;quot;your draft file name&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该命令会在source/下创建一个与&lt;strong&gt;_post&lt;/strong&gt;对应的&lt;strong&gt;_draft&lt;/strong&gt;文件夹，其中存放待编辑的草稿，而草稿不会影响正常的生成（hexo generate）部署（hexo deploy）&lt;/p&gt;
&lt;h4 id=&quot;hexo草稿预览&quot;&gt;&lt;a href=&quot;#hexo草稿预览&quot; class=&quot;headerlink&quot; title=&quot;hexo草稿预览&quot;&gt;&lt;/a&gt;hexo草稿预览&lt;/h4&gt;&lt;p&gt;如果需要预览草稿可以使用下面的命令进行预览&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server --draft&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;hexo草稿发布&quot;&gt;&lt;a href=&quot;#hexo草稿发布&quot; class=&quot;headerlink&quot; title=&quot;hexo草稿发布&quot;&gt;&lt;/a&gt;hexo草稿发布&lt;/h4&gt;&lt;p&gt;草稿编写完成后需要生成到public中并且进行部署，使用如下命令即可：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo publish &amp;quot;your draft file name&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多请参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://oomusou.io/hexo/hexo-draft/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何使用Hexo寫草稿&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;所有博客显示未命名-untitled&quot;&gt;&lt;a href=&quot;#所有博客显示未命名-untitled&quot; class=&quot;headerlink&quot; title=&quot;所有博客显示未命名(untitled)&quot;&gt;&lt;/a&gt;所有博客显示未命名(untitled)&lt;/h4&gt;&lt;p&gt;因为接触hexo不多，刚开始写的博客都是通过自己创建MarkDown文件导入到post中的，所以自然没有前缀，解决方式如下即可&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#以如下格式输入相应的字段&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: hexo搭建博客的几个小问题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-06-26 22:04:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#####正文内容&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;hexo在generate的时候会自动索引当前文件的标题、时间和tags等&lt;/p&gt;
&lt;h4 id=&quot;博客首页折叠&quot;&gt;&lt;a href=&quot;#博客首页折叠&quot; class=&quot;headerlink&quot; title=&quot;博客首页折叠&quot;&gt;&lt;/a&gt;博客首页折叠&lt;/h4&gt;&lt;p&gt;部署后发现首页的文章都是全部预览的，但别人的都是有个&lt;strong&gt;阅读全文&lt;/strong&gt;，其实在MD文件中添加一行代码就搞定了&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#####首页显示内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- more --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#####隐藏内容&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;hexo部署后，CNAME会被自动删除&quot;&gt;&lt;a href=&quot;#hexo部署后，CNAME会被自动删除&quot; class=&quot;headerlink&quot; title=&quot;hexo部署后，CNAME会被自动删除&quot;&gt;&lt;/a&gt;hexo部署后，CNAME会被自动删除&lt;/h4&gt;&lt;p&gt;将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.shutu.tech/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Android常用的几种格式：NV21/NV12/YV12/YUV420P的区别</title>
    <link href="http://www.shutu.tech/2016/06/13/DifferenceOfYUV/"/>
    <id>http://www.shutu.tech/2016/06/13/DifferenceOfYUV/</id>
    <published>2016-06-13T13:26:08.000Z</published>
    <updated>2016-06-27T16:14:00.000Z</updated>
    
    <content type="html">&lt;h5 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h5&gt;&lt;p&gt;　　因工作方面接触到图像处理这一块，需要对手机摄像头采集的原始帧做Rotate或者Scale，但无奈对此的了解少之又少，于是网上搜了一顿，完事后将最近所学总结一下，以方便之后的人别踩太多坑。  &lt;/p&gt;
&lt;p&gt;　　首先想要了解YUV为何物:&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/aa904813&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;请猛戳我&lt;/a&gt;　　&lt;/p&gt;
&lt;p&gt;　　上面的链接中微软已经写的很详细了，国内大部分文章都是翻译这篇文章的，如果还有疑问的同学可以参考下面这些大神的博客：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/leixiaohua1020/article/details/42134965&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;最简单的基于FFmpeg的libswscale的示例（YUV转RGB）&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/azraelly/archive/2013/01/01/2841269.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;图文详解YUV420数据格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tangzm.com/blog/?p=18&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ANDROID 高性能图形处理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/yanzi1225627/article/details/8626411&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android摄像头开发：实时摄像头视频预览帧的编码问题（二）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;p&gt;　　看完上面的文章应该都会有所了解和认识了，因为在&lt;strong&gt;Android SDK &amp;lt;= 20（Android5.0）&lt;/strong&gt;中Google支持的Camera Preview Callback的YUV常用格式有两种：NV21 / YV12，在此针对这两种格式做分析。&lt;/p&gt;
&lt;h5 id=&quot;NV21：&quot;&gt;&lt;a href=&quot;#NV21：&quot; class=&quot;headerlink&quot; title=&quot;NV21：&quot;&gt;&lt;/a&gt;NV21：&lt;/h5&gt;&lt;p&gt;引用一段微软的叙述：&lt;/p&gt;
&lt;h6 id=&quot;4-2-0-Formats-12-Bits-per-Pixel&quot;&gt;&lt;a href=&quot;#4-2-0-Formats-12-Bits-per-Pixel&quot; class=&quot;headerlink&quot; title=&quot;4:2:0 Formats, 12 Bits per Pixel&quot;&gt;&lt;/a&gt;4:2:0 Formats, 12 Bits per Pixel&lt;/h6&gt;&lt;blockquote&gt;
&lt;p&gt;Four 4:2:0 12-bpp formats are recommended, with the following FOURCC codes:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IMC2  &lt;/li&gt;
&lt;li&gt;IMC4  &lt;/li&gt;
&lt;li&gt;YV12  &lt;/li&gt;
&lt;li&gt;NV12&lt;br&gt;  In all of these formats, the chroma channels are subsampled by a factor of two in both the horizontal and vertical dimensions. &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;YV12&quot;&gt;&lt;a href=&quot;#YV12&quot; class=&quot;headerlink&quot; title=&quot;YV12&quot;&gt;&lt;/a&gt;YV12&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;All of the Y samples appear first in memory as an array of unsigned char values.&lt;/code&gt; This array is followed immediately by all of the V (Cr) samples. The stride of the V plane is half the stride of the Y plane, and the V plane contains half as many lines as the Y plane. The V plane is followed immediately by all of the U (Cb) samples, with the same stride and number of lines as the V plane (Figure 12).&lt;br&gt;&lt;strong&gt;Figure 12:&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eterrao/BlogExamples/master/Blogs/DifferenceOfYUV/fig1.gif&quot; alt=&quot;YV12 memory layout&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;NV12&quot;&gt;&lt;a href=&quot;#NV12&quot; class=&quot;headerlink&quot; title=&quot;NV12&quot;&gt;&lt;/a&gt;NV12&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;All of the Y samples are found first in memory as an array of unsigned char values with an even number of lines.&lt;/code&gt; The Y plane is followed immediately by an array of unsigned char values that contains packed U (Cb) and V (Cr) samples, as shown in Figure 13. When the combined U-V array is addressed as an array of little-endian WORD values, the LSBs contain the U values, and the MSBs contain the V values. NV12 is the preferred 4:2:0 pixel format for DirectX VA. It is expected to be an intermediate-term requirement for DirectX VA accelerators supporting 4:2:0 video.&lt;br&gt;&lt;strong&gt;Figure 13:&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eterrao/BlogExamples/master/Blogs/DifferenceOfYUV/fig2.gif&quot; alt=&quot;NV12 memory layout&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　从上可知YV12和NV12所占内存是&lt;strong&gt;12bits/Pixel&lt;/strong&gt;，因为&lt;strong&gt;每个Y就是一个像素点&lt;/strong&gt;，注意着色加粗的叙述，YUV值在内存中是按照数组的形式存放的，而由于&lt;strong&gt;YV12和NV21都是属于planar&lt;/strong&gt;格式，也就是Y值和UV值是独立采样的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;In a planar format, the Y, U, and V components are stored as three separate planes.&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　既然Y、U、V值都是独立的，那就意味着我们可以分别处理相应的值，比如在YV12中，排列方式是这样的，&lt;strong&gt;每4个Y共用一对UV值&lt;/strong&gt;，而U、V值又是按照如下格式排列&lt;br&gt;&lt;strong&gt;下面是YV12格式中宽为16，高为4像素的排列&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Y第一行:&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y第二行：&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y第三行：&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y第四行：&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y　　Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V第一行：&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U第一行：&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V第二行：&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V5&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V6&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;V7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U第二行：&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U5&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U6&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;U7&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;　　既然知道了YUV值的结构，我们就可以任性的对此图像做Rotate，scale等等。这里我以480ｘ270 （16:9)的一张原始帧图像举例，贴出部分代码示例：&lt;br&gt;任意设定的一个带有onPreviewFrame的类，&lt;strong&gt;CameraPreviewFrame.java:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 获取preview的原始帧：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 这里有个前提，因为Android camera preview默认格式为NV21的，所以需要&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 调用setPreviewFormat()方法设置为我们需要的格式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onPreviewFrame&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] data, Camera camera)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;span class=&quot;comment&quot;&gt;// 假设这里的data为480x270原始帧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String SRC_FRAME_WIDTH = &lt;span class=&quot;number&quot;&gt;480&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String SRC_FRAME_HEIGHT = &lt;span class=&quot;number&quot;&gt;270&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String DES_FRAME_WIDTH = &lt;span class=&quot;number&quot;&gt;480&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String DES_FRAME_HEIGHT = &lt;span class=&quot;number&quot;&gt;270&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 此处将data数组保存在了指定的路径，保存类型为jpeg格式，但是普通的图片浏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 览器是无法打开的，需要使用RawView等专业的工具打开。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        saveImageData(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 定义与原始帧大小一样的outputData，因为YUV420所占内存是12Bits/Pixel，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;// 每个Y为一个像素8bit＝1Byte，U＝2bit＝1/4(Byte)，V＝2bit=1/4(Byte)，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;// Y值数量为480*270，则U=V＝480*270*(1/4)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] outputData = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[DES_FRAME_WIDTH * DES_FRAME_HEIGHT * &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// call the JNI method to rotate frame data clockwise 90 degrees&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        YuvUtil.DealYV12(data, outputData, SRC_FRAME_WIDTH, SRC_FRAME_HEIGHT, &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        saveImageData(outputData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// save image to sdcard path: Pictures/MyTestImage/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;saveImageData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] imageData)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        File imageFile = getOutputMediaFile(MEDIA_TYPE_IMAGE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (imageFile == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            FileOutputStream fos = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileOutputStream(imageFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fos.write(imageData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fos.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (FileNotFoundException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Log.e(TAG, &lt;span class=&quot;string&quot;&gt;&quot;File not found: &quot;&lt;/span&gt; + e.getMessage());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Log.e(TAG, &lt;span class=&quot;string&quot;&gt;&quot;Error accessing file: &quot;&lt;/span&gt; + e.getMessage());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; File &lt;span class=&quot;title&quot;&gt;getOutputMediaFile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; type)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        File imageFileDir = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES), &lt;span class=&quot;string&quot;&gt;&quot;MyTestImage&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!imageFileDir.exists()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!imageFileDir.mkdirs()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Log.e(TAG, &lt;span class=&quot;string&quot;&gt;&quot;can&#39;t makedir for imagefile&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Create a media file name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String timeStamp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SimpleDateFormat(&lt;span class=&quot;string&quot;&gt;&quot;yyyyMMdd_HHmmss&quot;&lt;/span&gt;).format(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Date());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        File imageFile;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type == MEDIA_TYPE_IMAGE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            imageFile = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(imageFileDir.getPath() + File.separator +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&quot;IMG_&quot;&lt;/span&gt; + timeStamp + &lt;span class=&quot;string&quot;&gt;&quot;.jpg&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type == MEDIA_TYPE_VIDEO) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            imageFile = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(imageFileDir.getPath() + File.separator +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&quot;VID_&quot;&lt;/span&gt; + timeStamp + &lt;span class=&quot;string&quot;&gt;&quot;.mp4&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; imageFile;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的代码中可以看到调用了JNI的方法：&lt;strong&gt;YuvUtil.RotateYV12()&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;YuvUtil&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 初始化，为data分配相应大小的内存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initYV12&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; scale_length)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DealYV12&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] src_data, &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[] dst_data, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; width, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; height, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; rotation)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;com_example_jni_YuvUtil.h&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* DO NOT EDIT THIS FILE - it is machine generated */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;jni.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* Header for class _Included_com_example_jni_YuvUtil */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifndef&lt;/span&gt; _Included_com_example_jni_YuvUtil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; _Included_com_example_jni_YuvUtil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Class:     com_example_jni_YuvUtil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Method:    initYV12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Signature: (II)V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;JNIEXPORT &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jni_YuvUtil_initYV12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;params&quot;&gt;(JNIEnv *, jclass, jint, jint)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Class:     com_example_jni_YuvUtil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Method:    DealYV12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Signature: ([B[BIIIII)V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;JNIEXPORT &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jni_YuvUtil_DealYV12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;params&quot;&gt;(JNIEnv *, jclass, jbyteArray, jbyteArray, jint, jint, jint, jint, jint)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**com_example_jni_YuvUtil.c**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;com_example_jni_YuvUtil.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;android/log.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;jni.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; TAG &lt;span class=&quot;string&quot;&gt;&quot;jni-log-jni&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 这个是自定义的LOG的标识&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LOGD(...) __android_log_print(ANDROID_LOG_DEBUG,TAG ,__VA_ARGS__) &lt;span class=&quot;comment&quot;&gt;// 定义LOGD类型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LOGI(...) __android_log_print(ANDROID_LOG_INFO,TAG ,__VA_ARGS__) &lt;span class=&quot;comment&quot;&gt;// 定义LOGI类型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LOGW(...) __android_log_print(ANDROID_LOG_WARN,TAG ,__VA_ARGS__) &lt;span class=&quot;comment&quot;&gt;// 定义LOGW类型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LOGE(...) __android_log_print(ANDROID_LOG_ERROR,TAG ,__VA_ARGS__) &lt;span class=&quot;comment&quot;&gt;// 定义LOGE类型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; LOGF(...) __android_log_print(ANDROID_LOG_FATAL,TAG ,__VA_ARGS__) &lt;span class=&quot;comment&quot;&gt;// 定义LOGF类型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *input_src_data, *output_src_data, *src_y_data,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *src_u_data, *src_v_data, *dst_y_data, *dst_v_data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; src_data_width, src_data_height, len_src;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Class:     com_example_jni_YuvUtil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;JNIEXPORT &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jni_YuvUtil_initYV12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jclass jcls, jint length, jint scaleDataLength)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    len_src = length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    len_scale = scaleDataLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LOGD(&lt;span class=&quot;string&quot;&gt;&quot;########## len_src  = %d, len_scale = %d \n&quot;&lt;/span&gt;, len_src, len_scale);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    input_src_data = &lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(sizeof(char) * len_src);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LOGD(&lt;span class=&quot;string&quot;&gt;&quot;########## input_src_data  = %d \n&quot;&lt;/span&gt;, input_src_data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    src_y_data = &lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(sizeof(char) * (len_src * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    src_u_data = &lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(sizeof(char) * (len_src / &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    src_v_data = &lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(sizeof(char) * (len_src / &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dst_y_data = &lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(sizeof(char) * (len_src * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dst_u_data = &lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(sizeof(char) * (len_src / &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dst_v_data = &lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(sizeof(char) * (len_src / &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;JNIEXPORT &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jni_YuvUtil_DealYV12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jclass jcls, jbyteArray src_data,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jbyteArray dst_data, jint width, jint height, jint rotation, jint dst_width, jint dst_height)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    src_data_width = width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    src_data_height = height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 将src_data的数据传给input_src_data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*env)-&amp;gt;GetByteArrayRegion (env, src_data, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len_src, (jbyte*)(input_src_data));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*以下三个memcpy分别将Y、U、V值从src_data中提取出来,将YUV值分别scale或者rotate，则可得到对应格式的图像数据*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// get y plane&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;memcpy&lt;/span&gt;(src_y_data, input_src_data , (len_src * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; /&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// get u plane&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;memcpy&lt;/span&gt;(src_u_data, input_src_data + (len_src * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;), len_src / &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// get v plane&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;memcpy&lt;/span&gt;(src_v_data, input_src_data + (len_src * &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; ), len_src / &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*获取yuv三个值的数据可以做相应操作*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ......... &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// .........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 例：将Y值置为0，则得到没有灰度的图像；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;memset&lt;/span&gt;(input_src_data + src_data_width * src_data_height, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, src_data_width * src_data_height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 将input_src_data的数据返回给dst_data输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// output to the dst_data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*env)-&amp;gt;SetByteArrayRegion (env, dst_data, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len_src, (jbyte*)(input_src_data));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * free memory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;JNIEXPORT &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; JNICALL &lt;span class=&quot;title&quot;&gt;Java_com_example_jni_YuvUtil_ReleaseYV12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;(JNIEnv *env , jclass jcls)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;free&lt;/span&gt;(output_src_data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;free&lt;/span&gt;(input_src_data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：以上代码不是完全的，只是用于说明而已，如果需要更多的操作还请各位朋友自己完善，因为没怎么写过这类博客代码很乱，如有表述的不清楚和有问题的地方，大家可以给我留言。&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h5&gt;&lt;p&gt;　　因工作方面接触到图像处理这一块，需要对手机摄像头采集的原始帧做Rotate或者Scale，但无奈对此的了解少之又少，于是网上搜了一顿，完事后将最近所学总结一下，以方便之后的人别踩太多坑。  &lt;/p&gt;
&lt;p&gt;　　首先想要了解YUV为何物:&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/aa904813&quot;&gt;请猛戳我&lt;/a&gt;　　&lt;/p&gt;
&lt;p&gt;　　上面的链接中微软已经写的很详细了，国内大部分文章都是翻译这篇文章的，如果还有疑问的同学可以参考下面这些大神的博客：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/leixiaohua1020/article/details/42134965&quot;&gt;最简单的基于FFmpeg的libswscale的示例（YUV转RGB）&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/azraelly/archive/2013/01/01/2841269.htm&quot;&gt;图文详解YUV420数据格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tangzm.com/blog/?p=18&quot;&gt;ANDROID 高性能图形处理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/yanzi1225627/article/details/8626411&quot;&gt;Android摄像头开发：实时摄像头视频预览帧的编码问题（二）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Android" scheme="http://www.shutu.tech/categories/Android/"/>
    
    
      <category term="Android" scheme="http://www.shutu.tech/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android动画浅析+模仿</title>
    <link href="http://www.shutu.tech/2016/05/20/AnimationExamples/"/>
    <id>http://www.shutu.tech/2016/05/20/AnimationExamples/</id>
    <published>2016-05-19T16:19:54.000Z</published>
    <updated>2016-06-27T16:13:42.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;Android动画浅析+模仿
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;ObjectAnimator&quot;&gt;&lt;a href=&quot;#ObjectAnimator&quot; class=&quot;headerlink&quot; title=&quot;ObjectAnimator:&quot;&gt;&lt;/a&gt;ObjectAnimator:&lt;/h4&gt;&lt;p&gt;属性动画（ObjectAnimator）的概念这里就不解释了，直接从代码中说明，以下是模仿Persicope的加载动画，简单的几行代码即可实现，当然我也是模仿的，更好的实现思路还请各位朋友自己仔细思考。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;先说说我的思路：&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;首先下载Periscope然后改名zip解包，获取对应的png图片（搜索相关的loading文件：ps__bg_loading.png），看到了该文件的大小，仔细观察后，发现可以把很多张图连在一起从右–&amp;gt;左的连续位移动画，而这里我用到了属性动画，当然不是最好的选择，而且我这里实现的方法很笨，就是将两个LinearLayout不同x的坐标轴同样的距离和时间进行右到左的translate。实现结果如下图：&lt;/p&gt;
&lt;h4 id=&quot;Demo-演示&quot;&gt;&lt;a href=&quot;#Demo-演示&quot; class=&quot;headerlink&quot; title=&quot;Demo 演示:&quot;&gt;&lt;/a&gt;Demo 演示:&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/eterrao/AnimationExamples/master/periscopeLoading.gif&quot; alt=&quot;Loading&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Demo地址：&lt;/strong&gt; &lt;a href=&quot;https://github.com/eterrao/AnimationExamples&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/eterrao/AnimationExamples&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;Android动画浅析+模仿
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;ObjectAnimator&quot;&gt;&lt;a href=&quot;#
    
    </summary>
    
      <category term="Android" scheme="http://www.shutu.tech/categories/Android/"/>
    
    
      <category term="Android" scheme="http://www.shutu.tech/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android-Classical-OpenSource</title>
    <link href="http://www.shutu.tech/2016/05/09/Android-Classical-OpenSource/"/>
    <id>http://www.shutu.tech/2016/05/09/Android-Classical-OpenSource/</id>
    <published>2016-05-09T05:02:52.000Z</published>
    <updated>2016-08-31T02:15:08.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Android-Classical-OpenSource&quot;&gt;&lt;a href=&quot;#Android-Classical-OpenSource&quot; class=&quot;headerlink&quot; title=&quot;Android-Classical-OpenSource&quot;&gt;&lt;/a&gt;Android-Classical-OpenSource&lt;/h1&gt;&lt;p&gt;Android开发中 个人遇到和使用过的值得分享的资源合集&lt;/p&gt;
&lt;h1 id=&quot;Trinea的OpenProject&quot;&gt;&lt;a href=&quot;#Trinea的OpenProject&quot; class=&quot;headerlink&quot; title=&quot;Trinea的OpenProject&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/Trinea/android-open-project&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Trinea的OpenProject&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;强烈推荐的Android 开源项目分类汇总，star数量1.7W+&lt;/p&gt;
&lt;h4 id=&quot;项目说明：&quot;&gt;&lt;a href=&quot;#项目说明：&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Android 开源项目第一篇——个性化控件(View)篇&lt;br&gt;  包括ListView、ActionBar、Menu、ViewPager、Gallery、GridView、ImageView、ProgressBar、TextView、ScrollView、TimeView、TipView、FlipView、ColorPickView、GraphView、UI Style、其他&lt;br&gt;Android 开源项目第二篇——工具库篇&lt;br&gt;  包括依赖注入、图片缓存、网络请求、数据库 ORM 工具包、Android 公共库、高版本向低版本兼容库、多媒体、事件总线、传感器、安全、插件化、文件、其他&lt;br&gt;Android 开源项目第三篇——优秀项目篇&lt;br&gt;  比较有意思的完整的 Android 项目&lt;br&gt;Android 开源项目第四篇——开发及测试工具篇&lt;br&gt;  包括开发效率工具、开发自测相关、测试工具、开发及编译环境、其他&lt;br&gt;Android 开源项目第五篇——优秀个人和团体篇&lt;br&gt;  乐于分享并且有一些很不错的开源项目的个人和组织，包括 JakeWharton、Chris Banes、Koushik Dutta 等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;awesome-android-ui&quot;&gt;&lt;a href=&quot;#awesome-android-ui&quot; class=&quot;headerlink&quot; title=&quot;awesome-android-ui&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/wasabeef/awesome-android-ui&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;awesome-android-ui&lt;/a&gt;&lt;/h1&gt;&lt;h4 id=&quot;项目说明：-1&quot;&gt;&lt;a href=&quot;#项目说明：-1&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;p&gt;国外wasabeef大神分享的一个库，同上面Trinea开源的共享库。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A curated list of awesome Android UI/UX libraries.                       &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;AndroidDevTools-开源项目分类汇总&quot;&gt;&lt;a href=&quot;#AndroidDevTools-开源项目分类汇总&quot; class=&quot;headerlink&quot; title=&quot;AndroidDevTools 开源项目分类汇总&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/inferjay/AndroidDevTools&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AndroidDevTools 开源项目分类汇总&lt;/a&gt;&lt;/h1&gt;&lt;h4 id=&quot;官方网站&quot;&gt;&lt;a href=&quot;#官方网站&quot; class=&quot;headerlink&quot; title=&quot;官方网站&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.androiddevtools.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方网站&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=&quot;项目说明：-2&quot;&gt;&lt;a href=&quot;#项目说明：-2&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;收集整理Android开发所需的Android SDK、开发中用到的工具、Android开发教程、Android设计规范，免费的设计素材等。&lt;br&gt;欢迎大家推荐自己在Android开发过程中用的好用的工具、学习开发教程、用到设计素材，欢迎Star、Fork 😄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;android-tech-frontier&quot;&gt;&lt;a href=&quot;#android-tech-frontier&quot; class=&quot;headerlink&quot; title=&quot;android-tech-frontier&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/eterrao/android-tech-frontier.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;android-tech-frontier&lt;/a&gt;&lt;/h1&gt;&lt;h4 id=&quot;项目说明：-3&quot;&gt;&lt;a href=&quot;#项目说明：-3&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;一个定期翻译、发布国内外Android优质的技术、开源库、软件架构设计、测试等文章的开源项目,让我们的技术跟上国际步伐。&lt;/p&gt;
&lt;p&gt;我们翻译的文章在能够联系到作者的情况下都会在获得作者授权后进行翻译，并且公开发布。发布的文章中都会保留原文链接、作者名，如有相关的版权协议我们也会一并附上。目前已经联系到的作者列表请参考授权文档;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h1 id=&quot;List-of-Free-Learning-Resources&quot;&gt;&lt;a href=&quot;#List-of-Free-Learning-Resources&quot; class=&quot;headerlink&quot; title=&quot;List of Free Learning Resources&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/vhf/free-programming-books&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;List of Free Learning Resources&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;超神的资源网站，各种国家的编程资料、电子书和博客，应有尽有。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;#个人博客资源：&lt;/p&gt;
&lt;h2 id=&quot;stormZhang&quot;&gt;&lt;a href=&quot;#stormZhang&quot; class=&quot;headerlink&quot; title=&quot;stormZhang&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://stormzhang.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stormZhang&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;每个人都有一段艰辛、苦逼的成长时光，所以学会从博客开始记录自己一点一滴。这个博客的文章每次看都让自己有更多的动力去学习。提醒自己别忘了还有梦想。&lt;br&gt;PS：&lt;code&gt;还有很多干货&lt;/code&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;##&lt;a href=&quot;http://ticktick.blog.51cto.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tickTick 的BLOG&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本目录下的代码都是来自于我的博客《Android应用开发》系列文章，本系列文章介绍Android开发的一些基础和进阶知识，并附带有一些简单的Demo示例，这些示例代码中很多Java文件都对Android API进行了良好的封装，可以直接拿到自己的项目中使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Code List&lt;/strong&gt;&lt;br&gt;Builder 给出了使用ant编译Android工程的通用shell脚本，相关博文：Android开发实践：用脚本编译Android工程&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GroupList&lt;/strong&gt;&lt;br&gt;封装并演示了如何使用Android的ExpandableListView控件，相关博文：Android开发实践：多级列表的封装与应用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PopDialog&lt;/strong&gt;&lt;br&gt;封装并演示了如何使用Android的PopupWindow控件，相关博文：Android开发实践：用PopupWindow实现自定义Dailog&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JniCallback&lt;/strong&gt;&lt;br&gt;演示了如何从Native线程回调Java的函数，相关博文：Android开发实践：JNI层线程回调Java函数示例&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JniBuffer&lt;/strong&gt;&lt;br&gt;演示了各种从Java端到Native层的Buffer传递方法，相关博文：Android开发实践：Java层与Jni层的数组传递&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LoopThread&lt;/strong&gt;&lt;br&gt;演示了如何实现一个自定义的带Loop消息循环的线程，相关博文：Android开发实践：自定义带消息循环（Looper）的工作线程&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;VideoPlayer&lt;/strong&gt;&lt;br&gt;演示了Android隐式Intent的用法，相关博文：Android开发实践：实战演练隐式Intent的用法&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;VideoServer&lt;/strong&gt;&lt;br&gt;演示了如何利用NanoHttpd搭建一个Android视频服务器，相关博文：基于NanoHttpd的Android视频服务器开发&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CustomView&lt;/strong&gt;&lt;br&gt;演示了如何自定义View和ViewGroup，并给出了一个柱状图动画自定义View的实现，相关博文：&lt;/p&gt;
&lt;p&gt;（1）Android开发实践：为什么要继承onMeasure()&lt;/p&gt;
&lt;p&gt;（2）Android开发实践：自定义ViewGroup的onLayout()分析&lt;/p&gt;
&lt;p&gt;（3）Android开发实践：自定义带动画的View&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WIFI&lt;/strong&gt; 封装了Andriod WIFI扫描和连接的相关API，相关博文：&lt;/p&gt;
&lt;p&gt;（1）Android开发实践：WIFI扫描功能的封装&lt;/p&gt;
&lt;p&gt;（2）Android开发实践：WIFI连接功能的封装&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Socket&lt;/strong&gt;封装了Android中的Socket相关API&lt;/p&gt;
&lt;p&gt;（1） Broadcaster.java 封装了UDP广播包的收发操作，相关博文：Android Socket 发送广播包的那些坑&lt;/p&gt;
&lt;p&gt;MediaDemo 给出了Android平台下多媒体相关API的demo代码，相关博文：Android中如何提取和生成mp4文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Utils&lt;/strong&gt; 给出了一系列的工具类代码&lt;/p&gt;
&lt;p&gt;（1）SignatureGen.java 一个可以生成Java函数签名字符串的工具类，相关博文: Android开发实践：JNI函数签名生成器&lt;/p&gt;
&lt;p&gt;（2）BitmapHelper.java 一个封装了Bitmap操作的工具类，包括图片的打开、保存、剪裁、旋转等操作，相关博文: Android开发实践：自己动手编写图片剪裁应用（3）&lt;/p&gt;
&lt;p&gt;（3）ImageConvertor.java 封装了Android中各种图像格式转换，包括：NV21，YUY2、RGB565、ARGB8888、PNG、JPEG、Bitmap之间的转换操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;工具类：&quot;&gt;&lt;a href=&quot;#工具类：&quot; class=&quot;headerlink&quot; title=&quot;工具类：&quot;&gt;&lt;/a&gt;工具类：&lt;/h1&gt;&lt;h2 id=&quot;通用&quot;&gt;&lt;a href=&quot;#通用&quot; class=&quot;headerlink&quot; title=&quot;通用&quot;&gt;&lt;/a&gt;通用&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;关于APK瘦身值得分享的一些经验：&lt;a href=&quot;http://www.jianshu.com/p/bd90dee57ad0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/bd90dee57ad0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PNG压缩：&lt;a href=&quot;https://tinypng.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://tinypng.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;MarkDown编辑器&quot;&gt;&lt;a href=&quot;#MarkDown编辑器&quot; class=&quot;headerlink&quot; title=&quot;MarkDown编辑器&quot;&gt;&lt;/a&gt;MarkDown编辑器&lt;/h2&gt;&lt;h3 id=&quot;Typora&quot;&gt;&lt;a href=&quot;#Typora&quot; class=&quot;headerlink&quot; title=&quot;Typora&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.typora.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Typora&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;正在使用，简单方便。&lt;strong&gt;强烈推荐！&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：&lt;ul&gt;
&lt;li&gt;实时预览&lt;/li&gt;
&lt;li&gt;支持常用的几种主题（GitHub、Night等等）&lt;/li&gt;
&lt;li&gt;快捷键插入十分方便&lt;/li&gt;
&lt;li&gt;支持代码的高亮及多种语言的高亮选择&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;: 由于是国外网站，所以下载比较慢，耐心等待&lt;/p&gt;
&lt;h3 id=&quot;Mou&quot;&gt;&lt;a href=&quot;#Mou&quot; class=&quot;headerlink&quot; title=&quot;Mou&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://25.io/mou/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mou&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;该有的都有了，羞耻的使用了破解版，但是个人唯一受不了的是这货居然不支持多窗口！！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：左边编辑右边实时预览；&lt;/li&gt;
&lt;li&gt;缺点：&lt;ul&gt;
&lt;li&gt;不支持多窗口，不知道能不能设置；&lt;/li&gt;
&lt;li&gt;收费软件；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Cmd-Markdown编辑器&quot;&gt;&lt;a href=&quot;#Cmd-Markdown编辑器&quot; class=&quot;headerlink&quot; title=&quot;Cmd Markdown编辑器&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.zybuluo.com/mdeditor#403095&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cmd Markdown编辑器&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;一款&lt;strong&gt;在线&lt;/strong&gt;编辑的MarkDown编辑器，设计简洁。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：&lt;ul&gt;
&lt;li&gt;浏览器在线编辑，可以实时同步到不同的设备&lt;/li&gt;
&lt;li&gt;支持导出的格式挺多&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺点：&lt;ul&gt;
&lt;li&gt;需要注册登录账号&lt;/li&gt;
&lt;li&gt;没有网貌似没法用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;StackEdit&quot;&gt;&lt;a href=&quot;#StackEdit&quot; class=&quot;headerlink&quot; title=&quot;StackEdit&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://stackedit.io/editor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StackEdit&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;同样是&lt;strong&gt;在线&lt;/strong&gt;编辑器，国外的&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;真机调试&quot;&gt;&lt;a href=&quot;#真机调试&quot; class=&quot;headerlink&quot; title=&quot;真机调试&quot;&gt;&lt;/a&gt;真机调试&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.testin.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;云测 (Testin)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://utest.qq.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;优测 (腾讯的)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;数据统计-Bug-Crash-Reporter&quot;&gt;&lt;a href=&quot;#数据统计-Bug-Crash-Reporter&quot; class=&quot;headerlink&quot; title=&quot;数据统计 / Bug / Crash Reporter&quot;&gt;&lt;/a&gt;数据统计 / Bug / Crash Reporter&lt;/h2&gt;&lt;h3 id=&quot;国内&quot;&gt;&lt;a href=&quot;#国内&quot; class=&quot;headerlink&quot; title=&quot;国内&quot;&gt;&lt;/a&gt;&lt;strong&gt;国内&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&quot;友盟&quot;&gt;&lt;a href=&quot;#友盟&quot; class=&quot;headerlink&quot; title=&quot;友盟&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;a href=&quot;http://www.umeng.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;友盟&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;友盟的功能集成挺多，常用的基本都覆盖了，社会化组件/数据统计/Bug分析基本都通用，并且使用起来比较直观。SDK使用的话也不算麻烦。&lt;br&gt;优点就不说了，说说缺点吧，就是Crash Report不能实时邮件反馈，第二天9点30左右才会收到前一天的统计概况。详情的话倒是可以实时查询。&lt;/p&gt;
&lt;h3 id=&quot;国外&quot;&gt;&lt;a href=&quot;#国外&quot; class=&quot;headerlink&quot; title=&quot;国外&quot;&gt;&lt;/a&gt;国外&lt;/h3&gt;&lt;h4 id=&quot;Fabric-Twitter出的&quot;&gt;&lt;a href=&quot;#Fabric-Twitter出的&quot; class=&quot;headerlink&quot; title=&quot;Fabric (Twitter出的)&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;a href=&quot;https://fabric.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fabric&lt;/a&gt; (Twitter出的)&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：反馈及时，一般有了Bug邮件没过多久就收到了，并且集成起来很方便，基于Android Studio的一个插件自动将SDK打入项目中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：如果平时Debug频率高的话建议关闭，每次切换分之如果有什么意外总会重新拉取最新的版本，一等就是十几分钟，等待真正公测的时候再打开，这样信息比较准确，还有建议测试的时候打包使用Debug版本号，能够在日志清楚的区分线上线下版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;公共API&quot;&gt;&lt;a href=&quot;#公共API&quot; class=&quot;headerlink&quot; title=&quot;公共API&quot;&gt;&lt;/a&gt;公共API&lt;/h2&gt;&lt;h3 id=&quot;和风天气&quot;&gt;&lt;a href=&quot;#和风天气&quot; class=&quot;headerlink&quot; title=&quot;和风天气&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.heweather.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;和风天气&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;一款功能较多，可以免费使用的天气API（免费的日访问量为3000，开发练手足够了）。&lt;/p&gt;
&lt;h3 id=&quot;干货集中营&quot;&gt;&lt;a href=&quot;#干货集中营&quot; class=&quot;headerlink&quot; title=&quot;干货集中营&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://gank.io/api&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;干货集中营&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;想要更多API？来这里吧，各种福利、干活日日推荐。&lt;/p&gt;
&lt;h3 id=&quot;Unsplash&quot;&gt;&lt;a href=&quot;#Unsplash&quot; class=&quot;headerlink&quot; title=&quot;Unsplash&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://unsplash.it/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Unsplash&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;一个全球集中的图片开放API&lt;/p&gt;
&lt;h3 id=&quot;看知乎&quot;&gt;&lt;a href=&quot;#看知乎&quot; class=&quot;headerlink&quot; title=&quot;看知乎&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.kanzhihu.com/api-document&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;看知乎&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;知乎开放的API，同样可以练练手&lt;/p&gt;
&lt;h1 id=&quot;看看Android新技术&quot;&gt;&lt;a href=&quot;#看看Android新技术&quot; class=&quot;headerlink&quot; title=&quot;看看Android新技术&quot;&gt;&lt;/a&gt;看看Android新技术&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/8ed9543b15db&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/8ed9543b15db&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;感觉Android不停的更新迭代，技术也是层出不穷，在深度学习的同时也要了解当今技术广度的变化嘛，这篇博客写的挺全面，涉及Retrofit，RxJava，MVP，MVVM等等&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;设计&quot;&gt;&lt;a href=&quot;#设计&quot; class=&quot;headerlink&quot; title=&quot;设计&quot;&gt;&lt;/a&gt;设计&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://share.jike.ruguoapp.com/topics/5517b3d3e4b08971ae480d7d&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dribbble每日最佳设计推送&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;面试相关&quot;&gt;&lt;a href=&quot;#面试相关&quot; class=&quot;headerlink&quot; title=&quot;面试相关&quot;&gt;&lt;/a&gt;面试相关&lt;/h1&gt;&lt;p&gt;面试，面试，面试！重要的事情说三遍！&lt;/p&gt;
&lt;h2 id=&quot;AndroidInterview-Q-A&quot;&gt;&lt;a href=&quot;#AndroidInterview-Q-A&quot; class=&quot;headerlink&quot; title=&quot;AndroidInterview-Q-A&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/JackyAndroid/AndroidInterview-Q-A&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AndroidInterview-Q-A&lt;/a&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;以下面试题来自于百度、小米、乐视、美团、58、猎豹、360、新浪、搜狐内部题库&lt;/p&gt;
&lt;p&gt;熟悉本文中列出的知识点会大大增加通过前两轮技术面试的几率。&lt;/p&gt;
&lt;h3 id=&quot;一、Java基础&quot;&gt;&lt;a href=&quot;#一、Java基础&quot; class=&quot;headerlink&quot; title=&quot;一、Java基础&quot;&gt;&lt;/a&gt;一、Java基础&lt;/h3&gt;&lt;h3 id=&quot;二、Android基础&quot;&gt;&lt;a href=&quot;#二、Android基础&quot; class=&quot;headerlink&quot; title=&quot;二、Android基础&quot;&gt;&lt;/a&gt;二、Android基础&lt;/h3&gt;&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;LearningNotes&quot;&gt;&lt;a href=&quot;#LearningNotes&quot; class=&quot;headerlink&quot; title=&quot;LearningNotes&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/GeniusVJR/LearningNotes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LearningNotes&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;内容涵盖了Android各大知识点，不必要都看别人总结的，可以自己试着总结这样学习更快，但可以根据别人列出的知识点查缺补漏。博主第六部分的&lt;strong&gt;面试经验&lt;/strong&gt;值得借鉴&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;一个五年Android开发者百度、阿里、聚美、映客的面试心经&quot;&gt;&lt;a href=&quot;#一个五年Android开发者百度、阿里、聚美、映客的面试心经&quot; class=&quot;headerlink&quot; title=&quot;一个五年Android开发者百度、阿里、聚美、映客的面试心经&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://gdky005.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一个五年Android开发者百度、阿里、聚美、映客的面试心经&lt;/a&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;先简单说说我最近的面试经历吧。面试的公司很多，其中有让我心血沸腾的经历，也有让我感到失望到无助的经历，我将这些体会都记录下来，细想之后很值得，面了这么多公司，要是最后什么也没有留下来，那就太浪费了。至少对于我来说有些东西在整理总结之后才能得到一个肯定的答案。希望这些能对即将换工作或者打算看看机会的你有一些帮助。&lt;/p&gt;
&lt;p&gt;……&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Android-Classical-OpenSource&quot;&gt;&lt;a href=&quot;#Android-Classical-OpenSource&quot; class=&quot;headerlink&quot; title=&quot;Android-Classical-OpenSource&quot;&gt;&lt;/a&gt;Android-Classical-OpenSource&lt;/h1&gt;&lt;p&gt;Android开发中 个人遇到和使用过的值得分享的资源合集&lt;/p&gt;
&lt;h1 id=&quot;Trinea的OpenProject&quot;&gt;&lt;a href=&quot;#Trinea的OpenProject&quot; class=&quot;headerlink&quot; title=&quot;Trinea的OpenProject&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/Trinea/android-open-project&quot;&gt;Trinea的OpenProject&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;强烈推荐的Android 开源项目分类汇总，star数量1.7W+&lt;/p&gt;
&lt;h4 id=&quot;项目说明：&quot;&gt;&lt;a href=&quot;#项目说明：&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Android 开源项目第一篇——个性化控件(View)篇&lt;br&gt;  包括ListView、ActionBar、Menu、ViewPager、Gallery、GridView、ImageView、ProgressBar、TextView、ScrollView、TimeView、TipView、FlipView、ColorPickView、GraphView、UI Style、其他&lt;br&gt;Android 开源项目第二篇——工具库篇&lt;br&gt;  包括依赖注入、图片缓存、网络请求、数据库 ORM 工具包、Android 公共库、高版本向低版本兼容库、多媒体、事件总线、传感器、安全、插件化、文件、其他&lt;br&gt;Android 开源项目第三篇——优秀项目篇&lt;br&gt;  比较有意思的完整的 Android 项目&lt;br&gt;Android 开源项目第四篇——开发及测试工具篇&lt;br&gt;  包括开发效率工具、开发自测相关、测试工具、开发及编译环境、其他&lt;br&gt;Android 开源项目第五篇——优秀个人和团体篇&lt;br&gt;  乐于分享并且有一些很不错的开源项目的个人和组织，包括 JakeWharton、Chris Banes、Koushik Dutta 等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;awesome-android-ui&quot;&gt;&lt;a href=&quot;#awesome-android-ui&quot; class=&quot;headerlink&quot; title=&quot;awesome-android-ui&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/wasabeef/awesome-android-ui&quot;&gt;awesome-android-ui&lt;/a&gt;&lt;/h1&gt;&lt;h4 id=&quot;项目说明：-1&quot;&gt;&lt;a href=&quot;#项目说明：-1&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;p&gt;国外wasabeef大神分享的一个库，同上面Trinea开源的共享库。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A curated list of awesome Android UI/UX libraries.                       &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;AndroidDevTools-开源项目分类汇总&quot;&gt;&lt;a href=&quot;#AndroidDevTools-开源项目分类汇总&quot; class=&quot;headerlink&quot; title=&quot;AndroidDevTools 开源项目分类汇总&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/inferjay/AndroidDevTools&quot;&gt;AndroidDevTools 开源项目分类汇总&lt;/a&gt;&lt;/h1&gt;&lt;h4 id=&quot;官方网站&quot;&gt;&lt;a href=&quot;#官方网站&quot; class=&quot;headerlink&quot; title=&quot;官方网站&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.androiddevtools.cn/&quot;&gt;官方网站&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=&quot;项目说明：-2&quot;&gt;&lt;a href=&quot;#项目说明：-2&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;收集整理Android开发所需的Android SDK、开发中用到的工具、Android开发教程、Android设计规范，免费的设计素材等。&lt;br&gt;欢迎大家推荐自己在Android开发过程中用的好用的工具、学习开发教程、用到设计素材，欢迎Star、Fork 😄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;android-tech-frontier&quot;&gt;&lt;a href=&quot;#android-tech-frontier&quot; class=&quot;headerlink&quot; title=&quot;android-tech-frontier&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/eterrao/android-tech-frontier.git&quot;&gt;android-tech-frontier&lt;/a&gt;&lt;/h1&gt;&lt;h4 id=&quot;项目说明：-3&quot;&gt;&lt;a href=&quot;#项目说明：-3&quot; class=&quot;headerlink&quot; title=&quot;项目说明：&quot;&gt;&lt;/a&gt;项目说明：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;一个定期翻译、发布国内外Android优质的技术、开源库、软件架构设计、测试等文章的开源项目,让我们的技术跟上国际步伐。&lt;/p&gt;
&lt;p&gt;我们翻译的文章在能够联系到作者的情况下都会在获得作者授权后进行翻译，并且公开发布。发布的文章中都会保留原文链接、作者名，如有相关的版权协议我们也会一并附上。目前已经联系到的作者列表请参考授权文档;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android" scheme="http://www.shutu.tech/categories/Android/"/>
    
    
      <category term="Android" scheme="http://www.shutu.tech/tags/Android/"/>
    
  </entry>
  
</feed>
